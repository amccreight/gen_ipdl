use ast::{Compress, CxxTypeKind, Direction, IncludeType, MessageDecl,
          MessageModifier, PreambleStmt, Namespace, Nesting, TopLevelDecl,
          ParserState, Param, Priority, Protocol, QualifiedId, SendSemantics,
          StructField, TranslationUnit, TypeSpec};
extern crate lalrpop_util as ___lalrpop_util;

mod ___parse___TranslationUnit {
    #![allow(non_snake_case, non_camel_case_types, unused_mut, unused_variables, unused_imports)]

    use ast::{Compress, CxxTypeKind, Direction, IncludeType, MessageDecl,
          MessageModifier, PreambleStmt, Namespace, Nesting, TopLevelDecl,
          ParserState, Param, Priority, Protocol, QualifiedId, SendSemantics,
          StructField, TranslationUnit, TypeSpec};
    extern crate lalrpop_util as ___lalrpop_util;
    #[allow(dead_code)]
    pub enum ___Symbol<'input> {
        Term_22_28_22(&'input str),
        Term_22_29_22(&'input str),
        Term_22_2c_22(&'input str),
        Term_22_3a_22(&'input str),
        Term_22_3a_3a_22(&'input str),
        Term_22_3b_22(&'input str),
        Term_22_3c_22(&'input str),
        Term_22_3e_22(&'input str),
        Term_22_5b_22(&'input str),
        Term_22_5d_22(&'input str),
        Term_22____delete_____22(&'input str),
        Term_22async_22(&'input str),
        Term_22both_22(&'input str),
        Term_22child_22(&'input str),
        Term_22class_22(&'input str),
        Term_22compress_22(&'input str),
        Term_22compressall_22(&'input str),
        Term_22from_22(&'input str),
        Term_22high_22(&'input str),
        Term_22include_22(&'input str),
        Term_22inside__cpow_22(&'input str),
        Term_22inside__sync_22(&'input str),
        Term_22intr_22(&'input str),
        Term_22manager_22(&'input str),
        Term_22manages_22(&'input str),
        Term_22namespace_22(&'input str),
        Term_22nested_22(&'input str),
        Term_22normal_22(&'input str),
        Term_22not_22(&'input str),
        Term_22nullable_22(&'input str),
        Term_22or_22(&'input str),
        Term_22parent_22(&'input str),
        Term_22prio_22(&'input str),
        Term_22protocol_22(&'input str),
        Term_22returns_22(&'input str),
        Term_22struct_22(&'input str),
        Term_22sync_22(&'input str),
        Term_22union_22(&'input str),
        Term_22upto_22(&'input str),
        Term_22using_22(&'input str),
        Term_22verify_22(&'input str),
        Term_22_7b_22(&'input str),
        Term_22_7d_22(&'input str),
        Termr_23_22_5c_22_5b_5e_5c_22_5c_5cn_5d_2a_5c_22_22_23(&'input str),
        Termr_23_22_5ba_2dzA_2dZ___5d_5ba_2dzA_2dZ0_2d9___5d_2a_22_23(&'input str),
        Nt_22nullable_22_3f(::std::option::Option<&'input str>),
        Nt_28_22_5b_22_20_22_5d_22_29((&'input str, &'input str)),
        Nt_28_22_5b_22_20_22_5d_22_29_3f(::std::option::Option<(&'input str, &'input str)>),
        Nt_28PreambleStmt_20_22_3b_22_29((PreambleStmt, &'input str)),
        Nt_28PreambleStmt_20_22_3b_22_29_2a(::std::vec::Vec<(PreambleStmt, &'input str)>),
        Nt_28PreambleStmt_20_22_3b_22_29_2b(::std::vec::Vec<(PreambleStmt, &'input str)>),
        Nt_28StructField_20_22_3b_22_29((StructField, &'input str)),
        Nt_28StructField_20_22_3b_22_29_2a(::std::vec::Vec<(StructField, &'input str)>),
        Nt_28StructField_20_22_3b_22_29_2b(::std::vec::Vec<(StructField, &'input str)>),
        Nt_28Type_20_22_3b_22_29((TypeSpec, &'input str)),
        Nt_28Type_20_22_3b_22_29_2b(::std::vec::Vec<(TypeSpec, &'input str)>),
        NtBasicType(TypeSpec),
        NtCxxID(String),
        NtCxxIncludeStmt(PreambleStmt),
        NtCxxTemplateInst(String),
        NtCxxType(TypeSpec),
        NtCxxTypeKind(CxxTypeKind),
        NtID(String),
        NtIncludeStmt(PreambleStmt),
        NtManagerList(Vec<String>),
        NtManagersStmtOpt(Vec<String>),
        NtManagesStmt(String),
        NtManagesStmt_3f(::std::option::Option<String>),
        NtMessageBody(MessageDecl),
        NtMessageDecl(MessageDecl),
        NtMessageDeclThing(MessageDecl),
        NtMessageDeclThing_2a(::std::vec::Vec<MessageDecl>),
        NtMessageDeclThing_2b(::std::vec::Vec<MessageDecl>),
        NtMessageDirectionLabel(()),
        NtMessageId(String),
        NtMessageModifier(MessageModifier),
        NtMessageModifier_2a(::std::vec::Vec<MessageModifier>),
        NtMessageModifier_2b(::std::vec::Vec<MessageModifier>),
        NtMessageOutParams(Vec<Param>),
        NtNamespaceThing(Vec<(Namespace, TopLevelDecl)>),
        NtNamespaceThing_2b(::std::vec::Vec<Vec<(Namespace, TopLevelDecl)>>),
        NtNesting(Nesting),
        NtParam(Param),
        NtParamList(Vec<Param>),
        NtPreamble(Vec<PreambleStmt>),
        NtPreambleStmt(PreambleStmt),
        NtPriority(Priority),
        NtProtocolDefn((Namespace, Protocol)),
        NtProtocolSendSemanticsQual((Nesting, SendSemantics)),
        NtProtocolSendSemanticsQual_3f(::std::option::Option<(Nesting, SendSemantics)>),
        NtQualifiedID(QualifiedId),
        NtSTRING(String),
        NtSendQualifier((Option<Nesting>, Option<Priority>)),
        NtSendQualifierList((Option<Nesting>, Option<Priority>)),
        NtSendSemanticsQual((Nesting, Priority, SendSemantics)),
        NtStructDecl((Namespace, Vec<StructField>)),
        NtStructField(StructField),
        NtTranslationUnit(TranslationUnit),
        NtType(TypeSpec),
        NtUnionDecl((Namespace, Vec<TypeSpec>)),
        NtUsingStmt(PreambleStmt),
        Nt______TranslationUnit(TranslationUnit),
    }
    const ___ACTION: &'static [i32] = &[
        // State 0
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -75, // on "async", reduce `Preamble =  => ActionFn(111);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        9, // on "include", goto 8
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -75, // on "intr", reduce `Preamble =  => ActionFn(111);`
        0, // on "manager", error
        0, // on "manages", error
        -75, // on "namespace", reduce `Preamble =  => ActionFn(111);`
        -75, // on "nested", reduce `Preamble =  => ActionFn(111);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -75, // on "protocol", reduce `Preamble =  => ActionFn(111);`
        0, // on "returns", error
        -75, // on "struct", reduce `Preamble =  => ActionFn(111);`
        -75, // on "sync", reduce `Preamble =  => ActionFn(111);`
        -75, // on "union", reduce `Preamble =  => ActionFn(111);`
        0, // on "upto", error
        10, // on "using", goto 9
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 1
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -76, // on "async", reduce `Preamble = (PreambleStmt ";")+ => ActionFn(112);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        9, // on "include", goto 8
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -76, // on "intr", reduce `Preamble = (PreambleStmt ";")+ => ActionFn(112);`
        0, // on "manager", error
        0, // on "manages", error
        -76, // on "namespace", reduce `Preamble = (PreambleStmt ";")+ => ActionFn(112);`
        -76, // on "nested", reduce `Preamble = (PreambleStmt ";")+ => ActionFn(112);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -76, // on "protocol", reduce `Preamble = (PreambleStmt ";")+ => ActionFn(112);`
        0, // on "returns", error
        -76, // on "struct", reduce `Preamble = (PreambleStmt ";")+ => ActionFn(112);`
        -76, // on "sync", reduce `Preamble = (PreambleStmt ";")+ => ActionFn(112);`
        -76, // on "union", reduce `Preamble = (PreambleStmt ";")+ => ActionFn(112);`
        0, // on "upto", error
        10, // on "using", goto 9
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 2
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -77, // on ";", reduce `PreambleStmt = CxxIncludeStmt => ActionFn(5);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 3
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -78, // on ";", reduce `PreambleStmt = IncludeStmt => ActionFn(6);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 4
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        18, // on "async", goto 17
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        19, // on "intr", goto 18
        0, // on "manager", error
        0, // on "manages", error
        20, // on "namespace", goto 19
        21, // on "nested", goto 20
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        22, // on "protocol", goto 21
        0, // on "returns", error
        23, // on "struct", goto 22
        24, // on "sync", goto 23
        25, // on "union", goto 24
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 5
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        26, // on ";", goto 25
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 6
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 7
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -79, // on ";", reduce `PreambleStmt = UsingStmt => ActionFn(7);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 8
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        29, // on "protocol", goto 28
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        30, // on r#"\"[^\"\\n]*\""#, goto 29
        31, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 30
        // State 9
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        38, // on "class", goto 37
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        39, // on "struct", goto 38
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        40, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 39
        // State 10
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        41, // on ";", goto 40
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 11
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -66, // on "async", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -66, // on "intr", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        0, // on "manager", error
        0, // on "manages", error
        -66, // on "namespace", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        -66, // on "nested", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -66, // on "protocol", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        0, // on "returns", error
        -66, // on "struct", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        -66, // on "sync", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        -66, // on "union", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 12
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        18, // on "async", goto 17
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        19, // on "intr", goto 18
        0, // on "manager", error
        0, // on "manages", error
        20, // on "namespace", goto 19
        21, // on "nested", goto 20
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        22, // on "protocol", goto 21
        0, // on "returns", error
        23, // on "struct", goto 22
        24, // on "sync", goto 23
        25, // on "union", goto 24
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 13
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -65, // on "async", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -65, // on "intr", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        0, // on "manager", error
        0, // on "manages", error
        -65, // on "namespace", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        -65, // on "nested", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -65, // on "protocol", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        0, // on "returns", error
        -65, // on "struct", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        -65, // on "sync", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        -65, // on "union", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 14
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        43, // on "protocol", goto 42
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 15
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -63, // on "async", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -63, // on "intr", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        0, // on "manager", error
        0, // on "manages", error
        -63, // on "namespace", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        -63, // on "nested", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -63, // on "protocol", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        0, // on "returns", error
        -63, // on "struct", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        -63, // on "sync", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        -63, // on "union", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 16
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -64, // on "async", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -64, // on "intr", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        0, // on "manager", error
        0, // on "manages", error
        -64, // on "namespace", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        -64, // on "nested", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -64, // on "protocol", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        0, // on "returns", error
        -64, // on "struct", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        -64, // on "sync", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        -64, // on "union", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 17
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -90, // on "protocol", reduce `ProtocolSendSemanticsQual = "async" => ActionFn(54);`
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 18
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -94, // on "protocol", reduce `ProtocolSendSemanticsQual = "intr" => ActionFn(58);`
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 19
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        45, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 44
        // State 20
        46, // on "(", goto 45
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 21
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        45, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 44
        // State 22
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        45, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 44
        // State 23
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -91, // on "protocol", reduce `ProtocolSendSemanticsQual = "sync" => ActionFn(55);`
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 24
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        45, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 44
        // State 25
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -9, // on "async", reduce `(PreambleStmt ";")+ = PreambleStmt, ";" => ActionFn(109);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        -9, // on "include", reduce `(PreambleStmt ";")+ = PreambleStmt, ";" => ActionFn(109);`
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -9, // on "intr", reduce `(PreambleStmt ";")+ = PreambleStmt, ";" => ActionFn(109);`
        0, // on "manager", error
        0, // on "manages", error
        -9, // on "namespace", reduce `(PreambleStmt ";")+ = PreambleStmt, ";" => ActionFn(109);`
        -9, // on "nested", reduce `(PreambleStmt ";")+ = PreambleStmt, ";" => ActionFn(109);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -9, // on "protocol", reduce `(PreambleStmt ";")+ = PreambleStmt, ";" => ActionFn(109);`
        0, // on "returns", error
        -9, // on "struct", reduce `(PreambleStmt ";")+ = PreambleStmt, ";" => ActionFn(109);`
        -9, // on "sync", reduce `(PreambleStmt ";")+ = PreambleStmt, ";" => ActionFn(109);`
        -9, // on "union", reduce `(PreambleStmt ";")+ = PreambleStmt, ";" => ActionFn(109);`
        0, // on "upto", error
        -9, // on "using", reduce `(PreambleStmt ";")+ = PreambleStmt, ";" => ActionFn(109);`
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 26
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -31, // on ";", reduce `IncludeStmt = "include", ID => ActionFn(10);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 27
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -23, // on ";", reduce `CxxIncludeStmt = "include", STRING => ActionFn(8);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 28
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        31, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 30
        // State 29
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -99, // on ";", reduce `STRING = r#"\"[^\"\\n]*\""# => ActionFn(2);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 30
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -29, // on ";", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 31
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        51, // on "::", goto 50
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        -26, // on "from", reduce `CxxType = CxxID => ActionFn(66);`
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 32
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        -22, // on "::", reduce `CxxID = CxxTemplateInst => ActionFn(70);`
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        -22, // on "from", reduce `CxxID = CxxTemplateInst => ActionFn(70);`
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 33
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        52, // on "from", goto 51
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 34
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        40, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 39
        // State 35
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        -21, // on "::", reduce `CxxID = ID => ActionFn(69);`
        0, // on ";", error
        54, // on "<", goto 53
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        -21, // on "from", reduce `CxxID = ID => ActionFn(69);`
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 36
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        55, // on "::", goto 54
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        -25, // on "from", reduce `CxxType = QualifiedID => ActionFn(65);`
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 37
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        -27, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `CxxTypeKind = "class" => ActionFn(13);`
        // State 38
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        -28, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `CxxTypeKind = "struct" => ActionFn(14);`
        // State 39
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        -29, // on "::", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        0, // on ";", error
        -29, // on "<", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        -29, // on "from", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 40
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -10, // on "async", reduce `(PreambleStmt ";")+ = (PreambleStmt ";")+, PreambleStmt, ";" => ActionFn(110);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        -10, // on "include", reduce `(PreambleStmt ";")+ = (PreambleStmt ";")+, PreambleStmt, ";" => ActionFn(110);`
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -10, // on "intr", reduce `(PreambleStmt ";")+ = (PreambleStmt ";")+, PreambleStmt, ";" => ActionFn(110);`
        0, // on "manager", error
        0, // on "manages", error
        -10, // on "namespace", reduce `(PreambleStmt ";")+ = (PreambleStmt ";")+, PreambleStmt, ";" => ActionFn(110);`
        -10, // on "nested", reduce `(PreambleStmt ";")+ = (PreambleStmt ";")+, PreambleStmt, ";" => ActionFn(110);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -10, // on "protocol", reduce `(PreambleStmt ";")+ = (PreambleStmt ";")+, PreambleStmt, ";" => ActionFn(110);`
        0, // on "returns", error
        -10, // on "struct", reduce `(PreambleStmt ";")+ = (PreambleStmt ";")+, PreambleStmt, ";" => ActionFn(110);`
        -10, // on "sync", reduce `(PreambleStmt ";")+ = (PreambleStmt ";")+, PreambleStmt, ";" => ActionFn(110);`
        -10, // on "union", reduce `(PreambleStmt ";")+ = (PreambleStmt ";")+, PreambleStmt, ";" => ActionFn(110);`
        0, // on "upto", error
        -10, // on "using", reduce `(PreambleStmt ";")+ = (PreambleStmt ";")+, PreambleStmt, ";" => ActionFn(110);`
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 41
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -67, // on "async", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -67, // on "intr", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        0, // on "manager", error
        0, // on "manages", error
        -67, // on "namespace", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        -67, // on "nested", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -67, // on "protocol", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        0, // on "returns", error
        -67, // on "struct", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        -67, // on "sync", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        -67, // on "union", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 42
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        45, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 44
        // State 43
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        57, // on "{", goto 56
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 44
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        -29, // on "{", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 45
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        58, // on "upto", goto 57
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 46
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        59, // on "{", goto 58
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 47
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        60, // on "{", goto 59
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 48
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        61, // on "{", goto 60
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 49
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -30, // on ";", reduce `IncludeStmt = "include", "protocol", ID => ActionFn(9);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 50
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        40, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 39
        // State 51
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        30, // on r#"\"[^\"\\n]*\""#, goto 29
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 52
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        64, // on "from", goto 63
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 53
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        66, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 65
        // State 54
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        40, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 39
        // State 55
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        68, // on "{", goto 67
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 56
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        18, // on "async", goto 17
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        19, // on "intr", goto 18
        0, // on "manager", error
        0, // on "manages", error
        75, // on "namespace", goto 74
        21, // on "nested", goto 20
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        76, // on "protocol", goto 75
        0, // on "returns", error
        77, // on "struct", goto 76
        24, // on "sync", goto 23
        78, // on "union", goto 77
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 57
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        80, // on "inside_cpow", goto 79
        81, // on "inside_sync", goto 80
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        82, // on "not", goto 81
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 58
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -35, // on "async", reduce `ManagersStmtOpt =  => ActionFn(24);`
        -35, // on "both", reduce `ManagersStmtOpt =  => ActionFn(24);`
        -35, // on "child", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -35, // on "intr", reduce `ManagersStmtOpt =  => ActionFn(24);`
        84, // on "manager", goto 83
        -35, // on "manages", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "namespace", error
        -35, // on "nested", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        -35, // on "parent", reduce `ManagersStmtOpt =  => ActionFn(24);`
        -35, // on "prio", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -35, // on "sync", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -35, // on "}", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 59
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        92, // on "nullable", goto 91
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        93, // on "}", goto 92
        0, // on r#"\"[^\"\\n]*\""#, error
        94, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 93
        // State 60
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        101, // on "nullable", goto 100
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        102, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 101
        // State 61
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        -98, // on "::", reduce `QualifiedID = CxxID, "::", CxxID => ActionFn(68);`
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        -98, // on "from", reduce `QualifiedID = CxxID, "::", CxxID => ActionFn(68);`
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 62
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -114, // on ";", reduce `UsingStmt = "using", CxxType, "from", STRING => ActionFn(11);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 63
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        30, // on r#"\"[^\"\\n]*\""#, goto 29
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 64
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        104, // on ">", goto 103
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 65
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        -29, // on ">", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 66
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        -97, // on "::", reduce `QualifiedID = QualifiedID, "::", CxxID => ActionFn(67);`
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        -97, // on "from", reduce `QualifiedID = QualifiedID, "::", CxxID => ActionFn(67);`
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 67
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -35, // on "async", reduce `ManagersStmtOpt =  => ActionFn(24);`
        -35, // on "both", reduce `ManagersStmtOpt =  => ActionFn(24);`
        -35, // on "child", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -35, // on "intr", reduce `ManagersStmtOpt =  => ActionFn(24);`
        84, // on "manager", goto 83
        -35, // on "manages", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "namespace", error
        -35, // on "nested", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        -35, // on "parent", reduce `ManagersStmtOpt =  => ActionFn(24);`
        -35, // on "prio", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -35, // on "sync", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -35, // on "}", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 68
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -66, // on "async", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -66, // on "intr", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        0, // on "manager", error
        0, // on "manages", error
        -66, // on "namespace", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        -66, // on "nested", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -66, // on "protocol", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        0, // on "returns", error
        -66, // on "struct", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        -66, // on "sync", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        -66, // on "union", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -66, // on "}", reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 69
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        18, // on "async", goto 17
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        19, // on "intr", goto 18
        0, // on "manager", error
        0, // on "manages", error
        75, // on "namespace", goto 74
        21, // on "nested", goto 20
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        76, // on "protocol", goto 75
        0, // on "returns", error
        77, // on "struct", goto 76
        24, // on "sync", goto 23
        78, // on "union", goto 77
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        107, // on "}", goto 106
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 70
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -65, // on "async", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -65, // on "intr", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        0, // on "manager", error
        0, // on "manages", error
        -65, // on "namespace", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        -65, // on "nested", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -65, // on "protocol", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        0, // on "returns", error
        -65, // on "struct", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        -65, // on "sync", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        -65, // on "union", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -65, // on "}", reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 71
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        108, // on "protocol", goto 107
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 72
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -63, // on "async", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -63, // on "intr", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        0, // on "manager", error
        0, // on "manages", error
        -63, // on "namespace", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        -63, // on "nested", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -63, // on "protocol", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        0, // on "returns", error
        -63, // on "struct", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        -63, // on "sync", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        -63, // on "union", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -63, // on "}", reduce `NamespaceThing = StructDecl => ActionFn(16);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 73
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -64, // on "async", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -64, // on "intr", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        0, // on "manager", error
        0, // on "manages", error
        -64, // on "namespace", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        -64, // on "nested", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -64, // on "protocol", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        0, // on "returns", error
        -64, // on "struct", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        -64, // on "sync", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        -64, // on "union", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -64, // on "}", reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 74
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        45, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 44
        // State 75
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        45, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 44
        // State 76
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        45, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 44
        // State 77
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        45, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 44
        // State 78
        0, // on "(", error
        113, // on ")", goto 112
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 79
        0, // on "(", error
        -70, // on ")", reduce `Nesting = "inside_cpow" => ActionFn(44);`
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 80
        0, // on "(", error
        -69, // on ")", reduce `Nesting = "inside_sync" => ActionFn(43);`
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 81
        0, // on "(", error
        -68, // on ")", reduce `Nesting = "not" => ActionFn(42);`
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 82
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        125, // on "manages", goto 124
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        129, // on "}", goto 128
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 83
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        132, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 131
        // State 84
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        92, // on "nullable", goto 91
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        134, // on "}", goto 133
        0, // on r#"\"[^\"\\n]*\""#, error
        94, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 93
        // State 85
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        -112, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `Type = BasicType => ActionFn(105);`
        // State 86
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        135, // on "[", goto 134
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        -20, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `BasicType = CxxID => ActionFn(108);`
        // State 87
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        -22, // on "[", reduce `CxxID = CxxTemplateInst => ActionFn(70);`
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        -22, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `CxxID = CxxTemplateInst => ActionFn(70);`
        // State 88
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        136, // on "<", goto 135
        0, // on ">", error
        -21, // on "[", reduce `CxxID = ID => ActionFn(69);`
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        -21, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `CxxID = ID => ActionFn(69);`
        // State 89
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        137, // on ";", goto 136
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 90
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        31, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 30
        // State 91
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        94, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 93
        // State 92
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        140, // on ";", goto 139
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 93
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        -29, // on "<", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        0, // on ">", error
        -29, // on "[", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        -29, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        // State 94
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        101, // on "nullable", goto 100
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        142, // on "}", goto 141
        0, // on r#"\"[^\"\\n]*\""#, error
        102, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 101
        // State 95
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -112, // on ";", reduce `Type = BasicType => ActionFn(105);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 96
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -20, // on ";", reduce `BasicType = CxxID => ActionFn(108);`
        0, // on "<", error
        0, // on ">", error
        143, // on "[", goto 142
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 97
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -22, // on ";", reduce `CxxID = CxxTemplateInst => ActionFn(70);`
        0, // on "<", error
        0, // on ">", error
        -22, // on "[", reduce `CxxID = CxxTemplateInst => ActionFn(70);`
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 98
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -21, // on ";", reduce `CxxID = ID => ActionFn(69);`
        144, // on "<", goto 143
        0, // on ">", error
        -21, // on "[", reduce `CxxID = ID => ActionFn(69);`
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 99
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        145, // on ";", goto 144
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 100
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        102, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 101
        // State 101
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -29, // on ";", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        -29, // on "<", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        0, // on ">", error
        -29, // on "[", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 102
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -115, // on ";", reduce `UsingStmt = "using", CxxTypeKind, CxxType, "from", STRING => ActionFn(12);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 103
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        -24, // on "::", reduce `CxxTemplateInst = ID, "<", ID, ">" => ActionFn(71);`
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        -24, // on "from", reduce `CxxTemplateInst = ID, "<", ID, ">" => ActionFn(71);`
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 104
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        125, // on "manages", goto 124
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        149, // on "}", goto 148
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 105
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -67, // on "async", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -67, // on "intr", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        0, // on "manager", error
        0, // on "manages", error
        -67, // on "namespace", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        -67, // on "nested", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -67, // on "protocol", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        0, // on "returns", error
        -67, // on "struct", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        -67, // on "sync", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        -67, // on "union", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -67, // on "}", reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 106
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -62, // on "async", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -62, // on "intr", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        0, // on "manager", error
        0, // on "manages", error
        -62, // on "namespace", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        -62, // on "nested", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -62, // on "protocol", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        0, // on "returns", error
        -62, // on "struct", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        -62, // on "sync", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        -62, // on "union", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 107
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        45, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 44
        // State 108
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        151, // on "{", goto 150
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 109
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        152, // on "{", goto 151
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 110
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        153, // on "{", goto 152
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 111
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        154, // on "{", goto 153
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 112
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        155, // on "async", goto 154
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        156, // on "sync", goto 155
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 113
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        158, // on "}", goto 157
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 114
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        159, // on ";", goto 158
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 115
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -46, // on "async", reduce `MessageDeclThing+ = MessageDeclThing => ActionFn(100);`
        -46, // on "both", reduce `MessageDeclThing+ = MessageDeclThing => ActionFn(100);`
        -46, // on "child", reduce `MessageDeclThing+ = MessageDeclThing => ActionFn(100);`
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -46, // on "intr", reduce `MessageDeclThing+ = MessageDeclThing => ActionFn(100);`
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        -46, // on "nested", reduce `MessageDeclThing+ = MessageDeclThing => ActionFn(100);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        -46, // on "parent", reduce `MessageDeclThing+ = MessageDeclThing => ActionFn(100);`
        -46, // on "prio", reduce `MessageDeclThing+ = MessageDeclThing => ActionFn(100);`
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -46, // on "sync", reduce `MessageDeclThing+ = MessageDeclThing => ActionFn(100);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -46, // on "}", reduce `MessageDeclThing+ = MessageDeclThing => ActionFn(100);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 116
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        161, // on "}", goto 160
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 117
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        162, // on ":", goto 161
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 118
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 119
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        164, // on "async", goto 163
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        165, // on "sync", goto 164
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 120
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        169, // on "__delete__", goto 168
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        170, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 169
        // State 121
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        -50, // on ":", reduce `MessageDirectionLabel = "both" => ActionFn(32);`
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 122
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        -49, // on ":", reduce `MessageDirectionLabel = "child" => ActionFn(31);`
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 123
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        -106, // on "__delete__", reduce `SendSemanticsQual = "intr" => ActionFn(53);`
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        -106, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `SendSemanticsQual = "intr" => ActionFn(53);`
        // State 124
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        31, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 30
        // State 125
        172, // on "(", goto 171
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 126
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        -48, // on ":", reduce `MessageDirectionLabel = "parent" => ActionFn(30);`
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 127
        173, // on "(", goto 172
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 128
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        174, // on ";", goto 173
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 129
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -32, // on ";", reduce `ManagerList = ID => ActionFn(25);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        -32, // on "or", reduce `ManagerList = ID => ActionFn(25);`
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 130
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        175, // on ";", goto 174
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        176, // on "or", goto 175
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 131
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -29, // on ";", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        -29, // on "or", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 132
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        177, // on ";", goto 176
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 133
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        178, // on ";", goto 177
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 134
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        179, // on "]", goto 178
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 135
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        66, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 65
        // State 136
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        -14, // on "nullable", reduce `(StructField ";")+ = StructField, ";" => ActionFn(113);`
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -14, // on "}", reduce `(StructField ";")+ = StructField, ";" => ActionFn(113);`
        0, // on r#"\"[^\"\\n]*\""#, error
        -14, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `(StructField ";")+ = StructField, ";" => ActionFn(113);`
        // State 137
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -109, // on ";", reduce `StructField = Type, ID => ActionFn(20);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 138
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        -111, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `Type = "nullable", BasicType => ActionFn(104);`
        // State 139
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -107, // on "async", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -107, // on "intr", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        0, // on "manager", error
        0, // on "manages", error
        -107, // on "namespace", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        -107, // on "nested", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -107, // on "protocol", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        0, // on "returns", error
        -107, // on "struct", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        -107, // on "sync", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        -107, // on "union", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 140
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        181, // on ";", goto 180
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 141
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        182, // on ";", goto 181
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 142
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        183, // on "]", goto 182
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 143
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        66, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 65
        // State 144
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        -17, // on "nullable", reduce `(Type ";")+ = Type, ";" => ActionFn(117);`
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -17, // on "}", reduce `(Type ";")+ = Type, ";" => ActionFn(117);`
        0, // on r#"\"[^\"\\n]*\""#, error
        -17, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `(Type ";")+ = Type, ";" => ActionFn(117);`
        // State 145
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -111, // on ";", reduce `Type = "nullable", BasicType => ActionFn(104);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 146
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        186, // on "}", goto 185
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 147
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        187, // on "}", goto 186
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 148
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        188, // on ";", goto 187
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 149
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        189, // on "{", goto 188
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 150
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        18, // on "async", goto 17
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        19, // on "intr", goto 18
        0, // on "manager", error
        0, // on "manages", error
        75, // on "namespace", goto 74
        21, // on "nested", goto 20
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        76, // on "protocol", goto 75
        0, // on "returns", error
        77, // on "struct", goto 76
        24, // on "sync", goto 23
        78, // on "union", goto 77
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 151
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -35, // on "async", reduce `ManagersStmtOpt =  => ActionFn(24);`
        -35, // on "both", reduce `ManagersStmtOpt =  => ActionFn(24);`
        -35, // on "child", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -35, // on "intr", reduce `ManagersStmtOpt =  => ActionFn(24);`
        84, // on "manager", goto 83
        -35, // on "manages", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "namespace", error
        -35, // on "nested", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        -35, // on "parent", reduce `ManagersStmtOpt =  => ActionFn(24);`
        -35, // on "prio", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -35, // on "sync", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -35, // on "}", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 152
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        92, // on "nullable", goto 91
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        193, // on "}", goto 192
        0, // on r#"\"[^\"\\n]*\""#, error
        94, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 93
        // State 153
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        101, // on "nullable", goto 100
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        102, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 101
        // State 154
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -92, // on "protocol", reduce `ProtocolSendSemanticsQual = "nested", "(", "upto", Nesting, ")", "async" => ActionFn(56);`
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 155
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -93, // on "protocol", reduce `ProtocolSendSemanticsQual = "nested", "(", "upto", Nesting, ")", "sync" => ActionFn(57);`
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 156
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        195, // on "}", goto 194
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 157
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        196, // on ";", goto 195
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 158
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -43, // on "async", reduce `MessageDeclThing = MessageDecl, ";" => ActionFn(29);`
        -43, // on "both", reduce `MessageDeclThing = MessageDecl, ";" => ActionFn(29);`
        -43, // on "child", reduce `MessageDeclThing = MessageDecl, ";" => ActionFn(29);`
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -43, // on "intr", reduce `MessageDeclThing = MessageDecl, ";" => ActionFn(29);`
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        -43, // on "nested", reduce `MessageDeclThing = MessageDecl, ";" => ActionFn(29);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        -43, // on "parent", reduce `MessageDeclThing = MessageDecl, ";" => ActionFn(29);`
        -43, // on "prio", reduce `MessageDeclThing = MessageDecl, ";" => ActionFn(29);`
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -43, // on "sync", reduce `MessageDeclThing = MessageDecl, ";" => ActionFn(29);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -43, // on "}", reduce `MessageDeclThing = MessageDecl, ";" => ActionFn(29);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 159
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -47, // on "async", reduce `MessageDeclThing+ = MessageDeclThing+, MessageDeclThing => ActionFn(101);`
        -47, // on "both", reduce `MessageDeclThing+ = MessageDeclThing+, MessageDeclThing => ActionFn(101);`
        -47, // on "child", reduce `MessageDeclThing+ = MessageDeclThing+, MessageDeclThing => ActionFn(101);`
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -47, // on "intr", reduce `MessageDeclThing+ = MessageDeclThing+, MessageDeclThing => ActionFn(101);`
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        -47, // on "nested", reduce `MessageDeclThing+ = MessageDeclThing+, MessageDeclThing => ActionFn(101);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        -47, // on "parent", reduce `MessageDeclThing+ = MessageDeclThing+, MessageDeclThing => ActionFn(101);`
        -47, // on "prio", reduce `MessageDeclThing+ = MessageDeclThing+, MessageDeclThing => ActionFn(101);`
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -47, // on "sync", reduce `MessageDeclThing+ = MessageDeclThing+, MessageDeclThing => ActionFn(101);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -47, // on "}", reduce `MessageDeclThing+ = MessageDeclThing+, MessageDeclThing => ActionFn(101);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 160
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        197, // on ";", goto 196
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 161
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 162
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -102, // on "async", reduce `SendQualifierList = SendQualifier, SendQualifierList => ActionFn(49);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -102, // on "sync", reduce `SendQualifierList = SendQualifier, SendQualifierList => ActionFn(49);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 163
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        -104, // on "__delete__", reduce `SendSemanticsQual = SendQualifierList, "async" => ActionFn(51);`
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        -104, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `SendSemanticsQual = SendQualifierList, "async" => ActionFn(51);`
        // State 164
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        -105, // on "__delete__", reduce `SendSemanticsQual = SendQualifierList, "sync" => ActionFn(52);`
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        -105, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `SendSemanticsQual = SendQualifierList, "sync" => ActionFn(52);`
        // State 165
        -51, // on "(", reduce `MessageId = ID => ActionFn(35);`
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 166
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -41, // on ";", reduce `MessageDecl = SendSemanticsQual, MessageBody => ActionFn(33);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 167
        199, // on "(", goto 198
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 168
        -52, // on "(", reduce `MessageId = "__delete__" => ActionFn(36);`
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 169
        -29, // on "(", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 170
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        200, // on ";", goto 199
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 171
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        80, // on "inside_cpow", goto 79
        81, // on "inside_sync", goto 80
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        82, // on "not", goto 81
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 172
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        203, // on "high", goto 202
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        204, // on "normal", goto 203
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 173
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -87, // on "async", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -87, // on "intr", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        0, // on "manager", error
        0, // on "manages", error
        -87, // on "namespace", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        -87, // on "nested", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -87, // on "protocol", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        0, // on "returns", error
        -87, // on "struct", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        -87, // on "sync", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        -87, // on "union", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 174
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -34, // on "async", reduce `ManagersStmtOpt = "manager", ManagerList, ";" => ActionFn(23);`
        -34, // on "both", reduce `ManagersStmtOpt = "manager", ManagerList, ";" => ActionFn(23);`
        -34, // on "child", reduce `ManagersStmtOpt = "manager", ManagerList, ";" => ActionFn(23);`
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -34, // on "intr", reduce `ManagersStmtOpt = "manager", ManagerList, ";" => ActionFn(23);`
        0, // on "manager", error
        -34, // on "manages", reduce `ManagersStmtOpt = "manager", ManagerList, ";" => ActionFn(23);`
        0, // on "namespace", error
        -34, // on "nested", reduce `ManagersStmtOpt = "manager", ManagerList, ";" => ActionFn(23);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        -34, // on "parent", reduce `ManagersStmtOpt = "manager", ManagerList, ";" => ActionFn(23);`
        -34, // on "prio", reduce `ManagersStmtOpt = "manager", ManagerList, ";" => ActionFn(23);`
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -34, // on "sync", reduce `ManagersStmtOpt = "manager", ManagerList, ";" => ActionFn(23);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -34, // on "}", reduce `ManagersStmtOpt = "manager", ManagerList, ";" => ActionFn(23);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 175
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        132, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 131
        // State 176
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        -15, // on "nullable", reduce `(StructField ";")+ = (StructField ";")+, StructField, ";" => ActionFn(114);`
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -15, // on "}", reduce `(StructField ";")+ = (StructField ";")+, StructField, ";" => ActionFn(114);`
        0, // on r#"\"[^\"\\n]*\""#, error
        -15, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `(StructField ";")+ = (StructField ";")+, StructField, ";" => ActionFn(114);`
        // State 177
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -108, // on "async", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -108, // on "intr", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        0, // on "manager", error
        0, // on "manages", error
        -108, // on "namespace", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        -108, // on "nested", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -108, // on "protocol", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        0, // on "returns", error
        -108, // on "struct", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        -108, // on "sync", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        -108, // on "union", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 178
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        -19, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `BasicType = CxxID, "[", "]" => ActionFn(107);`
        // State 179
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        206, // on ">", goto 205
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 180
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        -18, // on "nullable", reduce `(Type ";")+ = (Type ";")+, Type, ";" => ActionFn(118);`
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -18, // on "}", reduce `(Type ";")+ = (Type ";")+, Type, ";" => ActionFn(118);`
        0, // on r#"\"[^\"\\n]*\""#, error
        -18, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `(Type ";")+ = (Type ";")+, Type, ";" => ActionFn(118);`
        // State 181
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -113, // on "async", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -113, // on "intr", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        0, // on "manager", error
        0, // on "manages", error
        -113, // on "namespace", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        -113, // on "nested", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -113, // on "protocol", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        0, // on "returns", error
        -113, // on "struct", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        -113, // on "sync", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        -113, // on "union", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 182
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -19, // on ";", reduce `BasicType = CxxID, "[", "]" => ActionFn(107);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 183
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        207, // on ">", goto 206
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 184
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        208, // on "}", goto 207
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 185
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        209, // on ";", goto 208
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 186
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        210, // on ";", goto 209
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 187
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -86, // on "async", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -86, // on "intr", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        0, // on "manager", error
        0, // on "manages", error
        -86, // on "namespace", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        -86, // on "nested", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -86, // on "protocol", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        0, // on "returns", error
        -86, // on "struct", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        -86, // on "sync", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        -86, // on "union", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 188
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -35, // on "async", reduce `ManagersStmtOpt =  => ActionFn(24);`
        -35, // on "both", reduce `ManagersStmtOpt =  => ActionFn(24);`
        -35, // on "child", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -35, // on "intr", reduce `ManagersStmtOpt =  => ActionFn(24);`
        84, // on "manager", goto 83
        -35, // on "manages", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "namespace", error
        -35, // on "nested", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        -35, // on "parent", reduce `ManagersStmtOpt =  => ActionFn(24);`
        -35, // on "prio", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -35, // on "sync", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -35, // on "}", reduce `ManagersStmtOpt =  => ActionFn(24);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 189
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        18, // on "async", goto 17
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        19, // on "intr", goto 18
        0, // on "manager", error
        0, // on "manages", error
        75, // on "namespace", goto 74
        21, // on "nested", goto 20
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        76, // on "protocol", goto 75
        0, // on "returns", error
        77, // on "struct", goto 76
        24, // on "sync", goto 23
        78, // on "union", goto 77
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        212, // on "}", goto 211
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 190
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        125, // on "manages", goto 124
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        215, // on "}", goto 214
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 191
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        92, // on "nullable", goto 91
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        216, // on "}", goto 215
        0, // on r#"\"[^\"\\n]*\""#, error
        94, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 93
        // State 192
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        217, // on ";", goto 216
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 193
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        101, // on "nullable", goto 100
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        218, // on "}", goto 217
        0, // on r#"\"[^\"\\n]*\""#, error
        102, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 101
        // State 194
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        219, // on ";", goto 218
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 195
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -83, // on "async", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -83, // on "intr", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        0, // on "manager", error
        0, // on "manages", error
        -83, // on "namespace", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        -83, // on "nested", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -83, // on "protocol", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        0, // on "returns", error
        -83, // on "struct", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        -83, // on "sync", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        -83, // on "union", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 196
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -89, // on "async", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -89, // on "intr", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        0, // on "manager", error
        0, // on "manages", error
        -89, // on "namespace", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        -89, // on "nested", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -89, // on "protocol", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        0, // on "returns", error
        -89, // on "struct", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        -89, // on "sync", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        -89, // on "union", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 197
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        220, // on ";", goto 219
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 198
        0, // on "(", error
        -74, // on ")", reduce `ParamList =  => ActionFn(61);`
        -74, // on ",", reduce `ParamList =  => ActionFn(61);`
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        92, // on "nullable", goto 91
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        94, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 93
        // State 199
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -36, // on "async", reduce `ManagesStmt = "manages", ID, ";" => ActionFn(27);`
        -36, // on "both", reduce `ManagesStmt = "manages", ID, ";" => ActionFn(27);`
        -36, // on "child", reduce `ManagesStmt = "manages", ID, ";" => ActionFn(27);`
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -36, // on "intr", reduce `ManagesStmt = "manages", ID, ";" => ActionFn(27);`
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        -36, // on "nested", reduce `ManagesStmt = "manages", ID, ";" => ActionFn(27);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        -36, // on "parent", reduce `ManagesStmt = "manages", ID, ";" => ActionFn(27);`
        -36, // on "prio", reduce `ManagesStmt = "manages", ID, ";" => ActionFn(27);`
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -36, // on "sync", reduce `ManagesStmt = "manages", ID, ";" => ActionFn(27);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -36, // on "}", reduce `ManagesStmt = "manages", ID, ";" => ActionFn(27);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 200
        0, // on "(", error
        224, // on ")", goto 223
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 201
        0, // on "(", error
        225, // on ")", goto 224
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 202
        0, // on "(", error
        -81, // on ")", reduce `Priority = "high" => ActionFn(46);`
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 203
        0, // on "(", error
        -80, // on ")", reduce `Priority = "normal" => ActionFn(45);`
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 204
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -33, // on ";", reduce `ManagerList = ManagerList, "or", ID => ActionFn(26);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        -33, // on "or", reduce `ManagerList = ManagerList, "or", ID => ActionFn(26);`
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 205
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        -24, // on "[", reduce `CxxTemplateInst = ID, "<", ID, ">" => ActionFn(71);`
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        -24, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, reduce `CxxTemplateInst = ID, "<", ID, ">" => ActionFn(71);`
        // State 206
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -24, // on ";", reduce `CxxTemplateInst = ID, "<", ID, ">" => ActionFn(71);`
        0, // on "<", error
        0, // on ">", error
        -24, // on "[", reduce `CxxTemplateInst = ID, "<", ID, ">" => ActionFn(71);`
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 207
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        226, // on ";", goto 225
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 208
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -82, // on "async", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -82, // on "intr", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        0, // on "manager", error
        0, // on "manages", error
        -82, // on "namespace", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        -82, // on "nested", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -82, // on "protocol", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        0, // on "returns", error
        -82, // on "struct", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        -82, // on "sync", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        -82, // on "union", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 209
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -88, // on "async", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -88, // on "intr", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        0, // on "manager", error
        0, // on "manages", error
        -88, // on "namespace", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        -88, // on "nested", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -88, // on "protocol", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        0, // on "returns", error
        -88, // on "struct", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        -88, // on "sync", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        -88, // on "union", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 210
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        125, // on "manages", goto 124
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        229, // on "}", goto 228
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 211
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -62, // on "async", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -62, // on "intr", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        0, // on "manager", error
        0, // on "manages", error
        -62, // on "namespace", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        -62, // on "nested", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -62, // on "protocol", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        0, // on "returns", error
        -62, // on "struct", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        -62, // on "sync", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        -62, // on "union", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -62, // on "}", reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 212
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        231, // on "}", goto 230
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 213
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        232, // on "}", goto 231
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 214
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        233, // on ";", goto 232
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 215
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        234, // on ";", goto 233
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 216
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -107, // on "async", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -107, // on "intr", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        0, // on "manager", error
        0, // on "manages", error
        -107, // on "namespace", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        -107, // on "nested", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -107, // on "protocol", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        0, // on "returns", error
        -107, // on "struct", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        -107, // on "sync", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        -107, // on "union", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -107, // on "}", reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 217
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        235, // on ";", goto 234
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 218
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -85, // on "async", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -85, // on "intr", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        0, // on "manager", error
        0, // on "manages", error
        -85, // on "namespace", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        -85, // on "nested", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -85, // on "protocol", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        0, // on "returns", error
        -85, // on "struct", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        -85, // on "sync", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        -85, // on "union", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 219
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -42, // on "async", reduce `MessageDeclThing = MessageDirectionLabel, ":", MessageDecl, ";" => ActionFn(28);`
        -42, // on "both", reduce `MessageDeclThing = MessageDirectionLabel, ":", MessageDecl, ";" => ActionFn(28);`
        -42, // on "child", reduce `MessageDeclThing = MessageDirectionLabel, ":", MessageDecl, ";" => ActionFn(28);`
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -42, // on "intr", reduce `MessageDeclThing = MessageDirectionLabel, ":", MessageDecl, ";" => ActionFn(28);`
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        -42, // on "nested", reduce `MessageDeclThing = MessageDirectionLabel, ":", MessageDecl, ";" => ActionFn(28);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        -42, // on "parent", reduce `MessageDeclThing = MessageDirectionLabel, ":", MessageDecl, ";" => ActionFn(28);`
        -42, // on "prio", reduce `MessageDeclThing = MessageDirectionLabel, ":", MessageDecl, ";" => ActionFn(28);`
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -42, // on "sync", reduce `MessageDeclThing = MessageDirectionLabel, ":", MessageDecl, ";" => ActionFn(28);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -42, // on "}", reduce `MessageDeclThing = MessageDirectionLabel, ":", MessageDecl, ";" => ActionFn(28);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 220
        0, // on "(", error
        -73, // on ")", reduce `ParamList = Param => ActionFn(60);`
        -73, // on ",", reduce `ParamList = Param => ActionFn(60);`
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 221
        0, // on "(", error
        236, // on ")", goto 235
        237, // on ",", goto 236
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 222
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        239, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 238
        // State 223
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -100, // on "async", reduce `SendQualifier = "nested", "(", Nesting, ")" => ActionFn(47);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        -100, // on "nested", reduce `SendQualifier = "nested", "(", Nesting, ")" => ActionFn(47);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        -100, // on "prio", reduce `SendQualifier = "nested", "(", Nesting, ")" => ActionFn(47);`
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -100, // on "sync", reduce `SendQualifier = "nested", "(", Nesting, ")" => ActionFn(47);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 224
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -101, // on "async", reduce `SendQualifier = "prio", "(", Priority, ")" => ActionFn(48);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        -101, // on "nested", reduce `SendQualifier = "prio", "(", Priority, ")" => ActionFn(48);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        -101, // on "prio", reduce `SendQualifier = "prio", "(", Priority, ")" => ActionFn(48);`
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -101, // on "sync", reduce `SendQualifier = "prio", "(", Priority, ")" => ActionFn(48);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 225
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -84, // on "async", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -84, // on "intr", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        0, // on "manager", error
        0, // on "manages", error
        -84, // on "namespace", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        -84, // on "nested", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -84, // on "protocol", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        0, // on "returns", error
        -84, // on "struct", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        -84, // on "sync", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        -84, // on "union", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 226
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        241, // on "}", goto 240
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 227
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        242, // on "}", goto 241
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 228
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        243, // on ";", goto 242
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 229
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        244, // on "}", goto 243
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 230
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        245, // on ";", goto 244
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 231
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        246, // on ";", goto 245
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 232
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -87, // on "async", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -87, // on "intr", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        0, // on "manager", error
        0, // on "manages", error
        -87, // on "namespace", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        -87, // on "nested", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -87, // on "protocol", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        0, // on "returns", error
        -87, // on "struct", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        -87, // on "sync", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        -87, // on "union", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -87, // on "}", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 233
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -108, // on "async", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -108, // on "intr", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        0, // on "manager", error
        0, // on "manages", error
        -108, // on "namespace", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        -108, // on "nested", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -108, // on "protocol", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        0, // on "returns", error
        -108, // on "struct", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        -108, // on "sync", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        -108, // on "union", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -108, // on "}", reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 234
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -113, // on "async", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -113, // on "intr", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        0, // on "manager", error
        0, // on "manages", error
        -113, // on "namespace", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        -113, // on "nested", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -113, // on "protocol", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        0, // on "returns", error
        -113, // on "struct", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        -113, // on "sync", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        -113, // on "union", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -113, // on "}", reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 235
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -61, // on ";", reduce `MessageOutParams =  => ActionFn(38);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        -61, // on "compress", reduce `MessageOutParams =  => ActionFn(38);`
        -61, // on "compressall", reduce `MessageOutParams =  => ActionFn(38);`
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        248, // on "returns", goto 247
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        -61, // on "verify", reduce `MessageOutParams =  => ActionFn(38);`
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 236
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        92, // on "nullable", goto 91
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        94, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 93
        // State 237
        0, // on "(", error
        -71, // on ")", reduce `Param = Type, ID => ActionFn(62);`
        -71, // on ",", reduce `Param = Type, ID => ActionFn(62);`
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 238
        0, // on "(", error
        -29, // on ")", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        -29, // on ",", reduce `ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);`
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 239
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -103, // on "async", reduce `SendQualifierList =  => ActionFn(50);`
        122, // on "both", goto 121
        123, // on "child", goto 122
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        124, // on "intr", goto 123
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        126, // on "nested", goto 125
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        127, // on "parent", goto 126
        128, // on "prio", goto 127
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        -103, // on "sync", reduce `SendQualifierList =  => ActionFn(50);`
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        250, // on "}", goto 249
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 240
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        251, // on ";", goto 250
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 241
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        252, // on ";", goto 251
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 242
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -86, // on "async", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -86, // on "intr", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        0, // on "manager", error
        0, // on "manages", error
        -86, // on "namespace", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        -86, // on "nested", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -86, // on "protocol", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        0, // on "returns", error
        -86, // on "struct", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        -86, // on "sync", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        -86, // on "union", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -86, // on "}", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 243
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        253, // on ";", goto 252
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 244
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -83, // on "async", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -83, // on "intr", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        0, // on "manager", error
        0, // on "manages", error
        -83, // on "namespace", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        -83, // on "nested", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -83, // on "protocol", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        0, // on "returns", error
        -83, // on "struct", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        -83, // on "sync", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        -83, // on "union", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -83, // on "}", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 245
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -89, // on "async", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -89, // on "intr", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        0, // on "manager", error
        0, // on "manages", error
        -89, // on "namespace", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        -89, // on "nested", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -89, // on "protocol", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        0, // on "returns", error
        -89, // on "struct", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        -89, // on "sync", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        -89, // on "union", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -89, // on "}", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 246
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -39, // on ";", reduce `MessageBody = MessageId, "(", ParamList, ")", MessageOutParams => ActionFn(125);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        256, // on "compress", goto 255
        257, // on "compressall", goto 256
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        258, // on "verify", goto 257
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 247
        259, // on "(", goto 258
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 248
        0, // on "(", error
        -72, // on ")", reduce `ParamList = ParamList, ",", Param => ActionFn(59);`
        -72, // on ",", reduce `ParamList = ParamList, ",", Param => ActionFn(59);`
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 249
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        260, // on ";", goto 259
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 250
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -82, // on "async", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -82, // on "intr", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        0, // on "manager", error
        0, // on "manages", error
        -82, // on "namespace", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        -82, // on "nested", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -82, // on "protocol", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        0, // on "returns", error
        -82, // on "struct", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        -82, // on "sync", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        -82, // on "union", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -82, // on "}", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 251
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -88, // on "async", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -88, // on "intr", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        0, // on "manager", error
        0, // on "manages", error
        -88, // on "namespace", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        -88, // on "nested", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -88, // on "protocol", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        0, // on "returns", error
        -88, // on "struct", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        -88, // on "sync", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        -88, // on "union", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -88, // on "}", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 252
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -85, // on "async", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -85, // on "intr", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        0, // on "manager", error
        0, // on "manages", error
        -85, // on "namespace", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        -85, // on "nested", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -85, // on "protocol", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        0, // on "returns", error
        -85, // on "struct", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        -85, // on "sync", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        -85, // on "union", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -85, // on "}", reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 253
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -58, // on ";", reduce `MessageModifier+ = MessageModifier => ActionFn(102);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        -58, // on "compress", reduce `MessageModifier+ = MessageModifier => ActionFn(102);`
        -58, // on "compressall", reduce `MessageModifier+ = MessageModifier => ActionFn(102);`
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        -58, // on "verify", reduce `MessageModifier+ = MessageModifier => ActionFn(102);`
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 254
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -40, // on ";", reduce `MessageBody = MessageId, "(", ParamList, ")", MessageOutParams, MessageModifier+ => ActionFn(126);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        256, // on "compress", goto 255
        257, // on "compressall", goto 256
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        258, // on "verify", goto 257
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 255
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -54, // on ";", reduce `MessageModifier = "compress" => ActionFn(40);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        -54, // on "compress", reduce `MessageModifier = "compress" => ActionFn(40);`
        -54, // on "compressall", reduce `MessageModifier = "compress" => ActionFn(40);`
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        -54, // on "verify", reduce `MessageModifier = "compress" => ActionFn(40);`
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 256
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -55, // on ";", reduce `MessageModifier = "compressall" => ActionFn(41);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        -55, // on "compress", reduce `MessageModifier = "compressall" => ActionFn(41);`
        -55, // on "compressall", reduce `MessageModifier = "compressall" => ActionFn(41);`
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        -55, // on "verify", reduce `MessageModifier = "compressall" => ActionFn(41);`
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 257
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -53, // on ";", reduce `MessageModifier = "verify" => ActionFn(39);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        -53, // on "compress", reduce `MessageModifier = "verify" => ActionFn(39);`
        -53, // on "compressall", reduce `MessageModifier = "verify" => ActionFn(39);`
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        -53, // on "verify", reduce `MessageModifier = "verify" => ActionFn(39);`
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 258
        0, // on "(", error
        -74, // on ")", reduce `ParamList =  => ActionFn(61);`
        -74, // on ",", reduce `ParamList =  => ActionFn(61);`
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        92, // on "nullable", goto 91
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        94, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, goto 93
        // State 259
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        -84, // on "async", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        -84, // on "intr", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        0, // on "manager", error
        0, // on "manages", error
        -84, // on "namespace", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        -84, // on "nested", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        -84, // on "protocol", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        0, // on "returns", error
        -84, // on "struct", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        -84, // on "sync", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        -84, // on "union", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        -84, // on "}", reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 260
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -59, // on ";", reduce `MessageModifier+ = MessageModifier+, MessageModifier => ActionFn(103);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        -59, // on "compress", reduce `MessageModifier+ = MessageModifier+, MessageModifier => ActionFn(103);`
        -59, // on "compressall", reduce `MessageModifier+ = MessageModifier+, MessageModifier => ActionFn(103);`
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        -59, // on "verify", reduce `MessageModifier+ = MessageModifier+, MessageModifier => ActionFn(103);`
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 261
        0, // on "(", error
        263, // on ")", goto 262
        237, // on ",", goto 236
        0, // on ":", error
        0, // on "::", error
        0, // on ";", error
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        0, // on "compress", error
        0, // on "compressall", error
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        0, // on "verify", error
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
        // State 262
        0, // on "(", error
        0, // on ")", error
        0, // on ",", error
        0, // on ":", error
        0, // on "::", error
        -60, // on ";", reduce `MessageOutParams = "returns", "(", ParamList, ")" => ActionFn(37);`
        0, // on "<", error
        0, // on ">", error
        0, // on "[", error
        0, // on "]", error
        0, // on "__delete__", error
        0, // on "async", error
        0, // on "both", error
        0, // on "child", error
        0, // on "class", error
        -60, // on "compress", reduce `MessageOutParams = "returns", "(", ParamList, ")" => ActionFn(37);`
        -60, // on "compressall", reduce `MessageOutParams = "returns", "(", ParamList, ")" => ActionFn(37);`
        0, // on "from", error
        0, // on "high", error
        0, // on "include", error
        0, // on "inside_cpow", error
        0, // on "inside_sync", error
        0, // on "intr", error
        0, // on "manager", error
        0, // on "manages", error
        0, // on "namespace", error
        0, // on "nested", error
        0, // on "normal", error
        0, // on "not", error
        0, // on "nullable", error
        0, // on "or", error
        0, // on "parent", error
        0, // on "prio", error
        0, // on "protocol", error
        0, // on "returns", error
        0, // on "struct", error
        0, // on "sync", error
        0, // on "union", error
        0, // on "upto", error
        0, // on "using", error
        -60, // on "verify", reduce `MessageOutParams = "returns", "(", ParamList, ")" => ActionFn(37);`
        0, // on "{", error
        0, // on "}", error
        0, // on r#"\"[^\"\\n]*\""#, error
        0, // on r#"[a-zA-Z_][a-zA-Z0-9_]*"#, error
    ];
    const ___EOF_ACTION: &'static [i32] = &[
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        -116, // on EOF, reduce `___TranslationUnit = TranslationUnit => ActionFn(0);`
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        -66, // on EOF, reduce `NamespaceThing+ = NamespaceThing => ActionFn(94);`
        -110, // on EOF, reduce `TranslationUnit = Preamble, NamespaceThing+ => ActionFn(3);`
        -65, // on EOF, reduce `NamespaceThing = ProtocolDefn => ActionFn(18);`
        0, // on EOF, error
        -63, // on EOF, reduce `NamespaceThing = StructDecl => ActionFn(16);`
        -64, // on EOF, reduce `NamespaceThing = UnionDecl => ActionFn(17);`
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        -67, // on EOF, reduce `NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);`
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        -62, // on EOF, reduce `NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);`
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        -107, // on EOF, reduce `StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);`
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        -87, // on EOF, reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);`
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        -108, // on EOF, reduce `StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);`
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        -113, // on EOF, reduce `UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);`
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        -86, // on EOF, reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);`
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        -83, // on EOF, reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);`
        -89, // on EOF, reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);`
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        -82, // on EOF, reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);`
        -88, // on EOF, reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);`
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        -85, // on EOF, reduce `ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);`
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        -84, // on EOF, reduce `ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);`
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
        0, // on EOF, error
    ];
    const ___GOTO: &'static [i32] = &[
        // State 0
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        2, // on (PreambleStmt ";")+, goto 1
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        3, // on CxxIncludeStmt, goto 2
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        4, // on IncludeStmt, goto 3
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        5, // on Preamble, goto 4
        6, // on PreambleStmt, goto 5
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        7, // on TranslationUnit, goto 6
        0, // on Type, error
        0, // on UnionDecl, error
        8, // on UsingStmt, goto 7
        0, // on ___TranslationUnit, error
        // State 1
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        3, // on CxxIncludeStmt, goto 2
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        4, // on IncludeStmt, goto 3
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        11, // on PreambleStmt, goto 10
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        8, // on UsingStmt, goto 7
        0, // on ___TranslationUnit, error
        // State 2
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 3
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 4
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        12, // on NamespaceThing, goto 11
        13, // on NamespaceThing+, goto 12
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        14, // on ProtocolDefn, goto 13
        15, // on ProtocolSendSemanticsQual, goto 14
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        16, // on StructDecl, goto 15
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        17, // on UnionDecl, goto 16
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 5
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 6
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 7
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 8
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        27, // on ID, goto 26
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        28, // on STRING, goto 27
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 9
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        32, // on CxxID, goto 31
        0, // on CxxIncludeStmt, error
        33, // on CxxTemplateInst, goto 32
        34, // on CxxType, goto 33
        35, // on CxxTypeKind, goto 34
        36, // on ID, goto 35
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        37, // on QualifiedID, goto 36
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 10
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 11
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 12
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        42, // on NamespaceThing, goto 41
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        14, // on ProtocolDefn, goto 13
        15, // on ProtocolSendSemanticsQual, goto 14
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        16, // on StructDecl, goto 15
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        17, // on UnionDecl, goto 16
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 13
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 14
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 15
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 16
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 17
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 18
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 19
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        44, // on ID, goto 43
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 20
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 21
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        47, // on ID, goto 46
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 22
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        48, // on ID, goto 47
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 23
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 24
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        49, // on ID, goto 48
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 25
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 26
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 27
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 28
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        50, // on ID, goto 49
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 29
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 30
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 31
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 32
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 33
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 34
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        32, // on CxxID, goto 31
        0, // on CxxIncludeStmt, error
        33, // on CxxTemplateInst, goto 32
        53, // on CxxType, goto 52
        0, // on CxxTypeKind, error
        36, // on ID, goto 35
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        37, // on QualifiedID, goto 36
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 35
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 36
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 37
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 38
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 39
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 40
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 41
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 42
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        56, // on ID, goto 55
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 43
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 44
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 45
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 46
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 47
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 48
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 49
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 50
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        62, // on CxxID, goto 61
        0, // on CxxIncludeStmt, error
        33, // on CxxTemplateInst, goto 32
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        36, // on ID, goto 35
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 51
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        63, // on STRING, goto 62
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 52
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 53
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        65, // on ID, goto 64
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 54
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        67, // on CxxID, goto 66
        0, // on CxxIncludeStmt, error
        33, // on CxxTemplateInst, goto 32
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        36, // on ID, goto 35
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 55
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 56
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        69, // on NamespaceThing, goto 68
        70, // on NamespaceThing+, goto 69
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        71, // on ProtocolDefn, goto 70
        72, // on ProtocolSendSemanticsQual, goto 71
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        73, // on StructDecl, goto 72
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        74, // on UnionDecl, goto 73
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 57
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        79, // on Nesting, goto 78
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 58
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        83, // on ManagersStmtOpt, goto 82
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 59
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        85, // on (StructField ";")+, goto 84
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        86, // on BasicType, goto 85
        87, // on CxxID, goto 86
        0, // on CxxIncludeStmt, error
        88, // on CxxTemplateInst, goto 87
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        89, // on ID, goto 88
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        90, // on StructField, goto 89
        0, // on TranslationUnit, error
        91, // on Type, goto 90
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 60
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        95, // on (Type ";")+, goto 94
        96, // on BasicType, goto 95
        97, // on CxxID, goto 96
        0, // on CxxIncludeStmt, error
        98, // on CxxTemplateInst, goto 97
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        99, // on ID, goto 98
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        100, // on Type, goto 99
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 61
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 62
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 63
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        103, // on STRING, goto 102
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 64
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 65
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 66
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 67
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        105, // on ManagersStmtOpt, goto 104
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 68
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 69
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        106, // on NamespaceThing, goto 105
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        71, // on ProtocolDefn, goto 70
        72, // on ProtocolSendSemanticsQual, goto 71
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        73, // on StructDecl, goto 72
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        74, // on UnionDecl, goto 73
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 70
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 71
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 72
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 73
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 74
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        109, // on ID, goto 108
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 75
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        110, // on ID, goto 109
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 76
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        111, // on ID, goto 110
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 77
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        112, // on ID, goto 111
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 78
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 79
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 80
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 81
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 82
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        114, // on ManagesStmt, goto 113
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        116, // on MessageDeclThing, goto 115
        0, // on MessageDeclThing*, error
        117, // on MessageDeclThing+, goto 116
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 83
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        130, // on ID, goto 129
        0, // on IncludeStmt, error
        131, // on ManagerList, goto 130
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 84
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        86, // on BasicType, goto 85
        87, // on CxxID, goto 86
        0, // on CxxIncludeStmt, error
        88, // on CxxTemplateInst, goto 87
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        89, // on ID, goto 88
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        133, // on StructField, goto 132
        0, // on TranslationUnit, error
        91, // on Type, goto 90
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 85
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 86
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 87
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 88
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 89
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 90
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        138, // on ID, goto 137
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 91
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        139, // on BasicType, goto 138
        87, // on CxxID, goto 86
        0, // on CxxIncludeStmt, error
        88, // on CxxTemplateInst, goto 87
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        89, // on ID, goto 88
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 92
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 93
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 94
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        96, // on BasicType, goto 95
        97, // on CxxID, goto 96
        0, // on CxxIncludeStmt, error
        98, // on CxxTemplateInst, goto 97
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        99, // on ID, goto 98
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        141, // on Type, goto 140
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 95
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 96
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 97
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 98
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 99
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 100
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        146, // on BasicType, goto 145
        97, // on CxxID, goto 96
        0, // on CxxIncludeStmt, error
        98, // on CxxTemplateInst, goto 97
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        99, // on ID, goto 98
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 101
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 102
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 103
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 104
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        147, // on ManagesStmt, goto 146
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        116, // on MessageDeclThing, goto 115
        0, // on MessageDeclThing*, error
        148, // on MessageDeclThing+, goto 147
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 105
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 106
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 107
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        150, // on ID, goto 149
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 108
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 109
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 110
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 111
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 112
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 113
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        116, // on MessageDeclThing, goto 115
        0, // on MessageDeclThing*, error
        157, // on MessageDeclThing+, goto 156
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 114
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 115
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 116
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        160, // on MessageDeclThing, goto 159
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 117
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 118
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        163, // on SendQualifierList, goto 162
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 119
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 120
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        166, // on ID, goto 165
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        167, // on MessageBody, goto 166
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        168, // on MessageId, goto 167
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 121
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 122
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 123
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 124
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        171, // on ID, goto 170
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 125
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 126
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 127
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 128
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 129
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 130
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 131
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 132
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 133
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 134
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 135
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        180, // on ID, goto 179
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 136
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 137
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 138
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 139
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 140
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 141
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 142
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 143
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        184, // on ID, goto 183
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 144
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 145
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 146
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        116, // on MessageDeclThing, goto 115
        0, // on MessageDeclThing*, error
        185, // on MessageDeclThing+, goto 184
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 147
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        160, // on MessageDeclThing, goto 159
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 148
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 149
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 150
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        69, // on NamespaceThing, goto 68
        190, // on NamespaceThing+, goto 189
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        71, // on ProtocolDefn, goto 70
        72, // on ProtocolSendSemanticsQual, goto 71
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        73, // on StructDecl, goto 72
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        74, // on UnionDecl, goto 73
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 151
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        191, // on ManagersStmtOpt, goto 190
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 152
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        192, // on (StructField ";")+, goto 191
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        86, // on BasicType, goto 85
        87, // on CxxID, goto 86
        0, // on CxxIncludeStmt, error
        88, // on CxxTemplateInst, goto 87
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        89, // on ID, goto 88
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        90, // on StructField, goto 89
        0, // on TranslationUnit, error
        91, // on Type, goto 90
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 153
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        194, // on (Type ";")+, goto 193
        96, // on BasicType, goto 95
        97, // on CxxID, goto 96
        0, // on CxxIncludeStmt, error
        98, // on CxxTemplateInst, goto 97
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        99, // on ID, goto 98
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        100, // on Type, goto 99
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 154
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 155
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 156
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        160, // on MessageDeclThing, goto 159
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 157
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 158
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 159
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 160
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 161
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        198, // on MessageDecl, goto 197
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 162
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 163
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 164
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 165
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 166
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 167
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 168
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 169
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 170
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 171
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        201, // on Nesting, goto 200
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 172
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        202, // on Priority, goto 201
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 173
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 174
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 175
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        205, // on ID, goto 204
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 176
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 177
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 178
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 179
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 180
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 181
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 182
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 183
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 184
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        160, // on MessageDeclThing, goto 159
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 185
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 186
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 187
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 188
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        211, // on ManagersStmtOpt, goto 210
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 189
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        106, // on NamespaceThing, goto 105
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        71, // on ProtocolDefn, goto 70
        72, // on ProtocolSendSemanticsQual, goto 71
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        73, // on StructDecl, goto 72
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        74, // on UnionDecl, goto 73
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 190
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        213, // on ManagesStmt, goto 212
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        116, // on MessageDeclThing, goto 115
        0, // on MessageDeclThing*, error
        214, // on MessageDeclThing+, goto 213
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 191
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        86, // on BasicType, goto 85
        87, // on CxxID, goto 86
        0, // on CxxIncludeStmt, error
        88, // on CxxTemplateInst, goto 87
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        89, // on ID, goto 88
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        133, // on StructField, goto 132
        0, // on TranslationUnit, error
        91, // on Type, goto 90
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 192
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 193
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        96, // on BasicType, goto 95
        97, // on CxxID, goto 96
        0, // on CxxIncludeStmt, error
        98, // on CxxTemplateInst, goto 97
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        99, // on ID, goto 98
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        141, // on Type, goto 140
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 194
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 195
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 196
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 197
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 198
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        86, // on BasicType, goto 85
        87, // on CxxID, goto 86
        0, // on CxxIncludeStmt, error
        88, // on CxxTemplateInst, goto 87
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        89, // on ID, goto 88
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        221, // on Param, goto 220
        222, // on ParamList, goto 221
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        223, // on Type, goto 222
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 199
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 200
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 201
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 202
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 203
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 204
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 205
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 206
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 207
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 208
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 209
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 210
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        227, // on ManagesStmt, goto 226
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        116, // on MessageDeclThing, goto 115
        0, // on MessageDeclThing*, error
        228, // on MessageDeclThing+, goto 227
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 211
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 212
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        116, // on MessageDeclThing, goto 115
        0, // on MessageDeclThing*, error
        230, // on MessageDeclThing+, goto 229
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 213
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        160, // on MessageDeclThing, goto 159
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 214
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 215
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 216
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 217
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 218
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 219
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 220
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 221
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 222
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        238, // on ID, goto 237
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 223
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 224
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 225
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 226
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        116, // on MessageDeclThing, goto 115
        0, // on MessageDeclThing*, error
        240, // on MessageDeclThing+, goto 239
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 227
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        160, // on MessageDeclThing, goto 159
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 228
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 229
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        160, // on MessageDeclThing, goto 159
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 230
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 231
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 232
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 233
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 234
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 235
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        247, // on MessageOutParams, goto 246
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 236
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        86, // on BasicType, goto 85
        87, // on CxxID, goto 86
        0, // on CxxIncludeStmt, error
        88, // on CxxTemplateInst, goto 87
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        89, // on ID, goto 88
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        249, // on Param, goto 248
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        223, // on Type, goto 222
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 237
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 238
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 239
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        115, // on MessageDecl, goto 114
        160, // on MessageDeclThing, goto 159
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        118, // on MessageDirectionLabel, goto 117
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        119, // on SendQualifier, goto 118
        120, // on SendQualifierList, goto 119
        121, // on SendSemanticsQual, goto 120
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 240
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 241
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 242
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 243
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 244
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 245
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 246
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        254, // on MessageModifier, goto 253
        0, // on MessageModifier*, error
        255, // on MessageModifier+, goto 254
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 247
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 248
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 249
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 250
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 251
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 252
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 253
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 254
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        261, // on MessageModifier, goto 260
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 255
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 256
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 257
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 258
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        86, // on BasicType, goto 85
        87, // on CxxID, goto 86
        0, // on CxxIncludeStmt, error
        88, // on CxxTemplateInst, goto 87
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        89, // on ID, goto 88
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        221, // on Param, goto 220
        262, // on ParamList, goto 261
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        223, // on Type, goto 222
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 259
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 260
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 261
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
        // State 262
        0, // on "nullable"?, error
        0, // on ("[" "]"), error
        0, // on ("[" "]")?, error
        0, // on (PreambleStmt ";"), error
        0, // on (PreambleStmt ";")*, error
        0, // on (PreambleStmt ";")+, error
        0, // on (StructField ";"), error
        0, // on (StructField ";")*, error
        0, // on (StructField ";")+, error
        0, // on (Type ";"), error
        0, // on (Type ";")+, error
        0, // on BasicType, error
        0, // on CxxID, error
        0, // on CxxIncludeStmt, error
        0, // on CxxTemplateInst, error
        0, // on CxxType, error
        0, // on CxxTypeKind, error
        0, // on ID, error
        0, // on IncludeStmt, error
        0, // on ManagerList, error
        0, // on ManagersStmtOpt, error
        0, // on ManagesStmt, error
        0, // on ManagesStmt?, error
        0, // on MessageBody, error
        0, // on MessageDecl, error
        0, // on MessageDeclThing, error
        0, // on MessageDeclThing*, error
        0, // on MessageDeclThing+, error
        0, // on MessageDirectionLabel, error
        0, // on MessageId, error
        0, // on MessageModifier, error
        0, // on MessageModifier*, error
        0, // on MessageModifier+, error
        0, // on MessageOutParams, error
        0, // on NamespaceThing, error
        0, // on NamespaceThing+, error
        0, // on Nesting, error
        0, // on Param, error
        0, // on ParamList, error
        0, // on Preamble, error
        0, // on PreambleStmt, error
        0, // on Priority, error
        0, // on ProtocolDefn, error
        0, // on ProtocolSendSemanticsQual, error
        0, // on ProtocolSendSemanticsQual?, error
        0, // on QualifiedID, error
        0, // on STRING, error
        0, // on SendQualifier, error
        0, // on SendQualifierList, error
        0, // on SendSemanticsQual, error
        0, // on StructDecl, error
        0, // on StructField, error
        0, // on TranslationUnit, error
        0, // on Type, error
        0, // on UnionDecl, error
        0, // on UsingStmt, error
        0, // on ___TranslationUnit, error
    ];
    pub fn parse_TranslationUnit<
        'input,
    >(
        parser_state: &ParserState,
        input: &'input str,
    ) -> Result<TranslationUnit, ___lalrpop_util::ParseError<usize,(usize, &'input str),()>>
    {
        let mut ___tokens = super::___intern_token::___Matcher::new(input);
        let mut ___states = vec![0_i32];
        let mut ___symbols = vec![];
        '___shift: loop {
            let ___lookahead = match ___tokens.next() {
                Some(Ok(v)) => v,
                None => break '___shift,
                Some(Err(e)) => return Err(e),
            };
            let ___integer = match ___lookahead {
                (_, (0, _), _) if true => 0,
                (_, (1, _), _) if true => 1,
                (_, (2, _), _) if true => 2,
                (_, (3, _), _) if true => 3,
                (_, (4, _), _) if true => 4,
                (_, (5, _), _) if true => 5,
                (_, (6, _), _) if true => 6,
                (_, (7, _), _) if true => 7,
                (_, (8, _), _) if true => 8,
                (_, (9, _), _) if true => 9,
                (_, (10, _), _) if true => 10,
                (_, (11, _), _) if true => 11,
                (_, (12, _), _) if true => 12,
                (_, (13, _), _) if true => 13,
                (_, (14, _), _) if true => 14,
                (_, (15, _), _) if true => 15,
                (_, (16, _), _) if true => 16,
                (_, (17, _), _) if true => 17,
                (_, (18, _), _) if true => 18,
                (_, (19, _), _) if true => 19,
                (_, (20, _), _) if true => 20,
                (_, (21, _), _) if true => 21,
                (_, (22, _), _) if true => 22,
                (_, (23, _), _) if true => 23,
                (_, (24, _), _) if true => 24,
                (_, (25, _), _) if true => 25,
                (_, (26, _), _) if true => 26,
                (_, (27, _), _) if true => 27,
                (_, (28, _), _) if true => 28,
                (_, (29, _), _) if true => 29,
                (_, (30, _), _) if true => 30,
                (_, (31, _), _) if true => 31,
                (_, (32, _), _) if true => 32,
                (_, (33, _), _) if true => 33,
                (_, (34, _), _) if true => 34,
                (_, (35, _), _) if true => 35,
                (_, (36, _), _) if true => 36,
                (_, (37, _), _) if true => 37,
                (_, (38, _), _) if true => 38,
                (_, (39, _), _) if true => 39,
                (_, (40, _), _) if true => 40,
                (_, (41, _), _) if true => 41,
                (_, (42, _), _) if true => 42,
                (_, (43, _), _) if true => 43,
                (_, (44, _), _) if true => 44,
                _ => {
                    return Err(___lalrpop_util::ParseError::UnrecognizedToken {
                        token: Some(___lookahead),
                        expected: vec![],
                    });
                }
            };
            loop {
                let ___state = *___states.last().unwrap() as usize;
                let ___action = ___ACTION[___state * 45 + ___integer];
                if ___action > 0 {
                    let ___symbol = match ___integer {
                        0 => match ___lookahead.1 {
                            (0, ___tok0) => ___Symbol::Term_22_28_22(___tok0),
                            _ => unreachable!(),
                        },
                        1 => match ___lookahead.1 {
                            (1, ___tok0) => ___Symbol::Term_22_29_22(___tok0),
                            _ => unreachable!(),
                        },
                        2 => match ___lookahead.1 {
                            (2, ___tok0) => ___Symbol::Term_22_2c_22(___tok0),
                            _ => unreachable!(),
                        },
                        3 => match ___lookahead.1 {
                            (3, ___tok0) => ___Symbol::Term_22_3a_22(___tok0),
                            _ => unreachable!(),
                        },
                        4 => match ___lookahead.1 {
                            (4, ___tok0) => ___Symbol::Term_22_3a_3a_22(___tok0),
                            _ => unreachable!(),
                        },
                        5 => match ___lookahead.1 {
                            (5, ___tok0) => ___Symbol::Term_22_3b_22(___tok0),
                            _ => unreachable!(),
                        },
                        6 => match ___lookahead.1 {
                            (6, ___tok0) => ___Symbol::Term_22_3c_22(___tok0),
                            _ => unreachable!(),
                        },
                        7 => match ___lookahead.1 {
                            (7, ___tok0) => ___Symbol::Term_22_3e_22(___tok0),
                            _ => unreachable!(),
                        },
                        8 => match ___lookahead.1 {
                            (8, ___tok0) => ___Symbol::Term_22_5b_22(___tok0),
                            _ => unreachable!(),
                        },
                        9 => match ___lookahead.1 {
                            (9, ___tok0) => ___Symbol::Term_22_5d_22(___tok0),
                            _ => unreachable!(),
                        },
                        10 => match ___lookahead.1 {
                            (10, ___tok0) => ___Symbol::Term_22____delete_____22(___tok0),
                            _ => unreachable!(),
                        },
                        11 => match ___lookahead.1 {
                            (11, ___tok0) => ___Symbol::Term_22async_22(___tok0),
                            _ => unreachable!(),
                        },
                        12 => match ___lookahead.1 {
                            (12, ___tok0) => ___Symbol::Term_22both_22(___tok0),
                            _ => unreachable!(),
                        },
                        13 => match ___lookahead.1 {
                            (13, ___tok0) => ___Symbol::Term_22child_22(___tok0),
                            _ => unreachable!(),
                        },
                        14 => match ___lookahead.1 {
                            (14, ___tok0) => ___Symbol::Term_22class_22(___tok0),
                            _ => unreachable!(),
                        },
                        15 => match ___lookahead.1 {
                            (15, ___tok0) => ___Symbol::Term_22compress_22(___tok0),
                            _ => unreachable!(),
                        },
                        16 => match ___lookahead.1 {
                            (16, ___tok0) => ___Symbol::Term_22compressall_22(___tok0),
                            _ => unreachable!(),
                        },
                        17 => match ___lookahead.1 {
                            (17, ___tok0) => ___Symbol::Term_22from_22(___tok0),
                            _ => unreachable!(),
                        },
                        18 => match ___lookahead.1 {
                            (18, ___tok0) => ___Symbol::Term_22high_22(___tok0),
                            _ => unreachable!(),
                        },
                        19 => match ___lookahead.1 {
                            (19, ___tok0) => ___Symbol::Term_22include_22(___tok0),
                            _ => unreachable!(),
                        },
                        20 => match ___lookahead.1 {
                            (20, ___tok0) => ___Symbol::Term_22inside__cpow_22(___tok0),
                            _ => unreachable!(),
                        },
                        21 => match ___lookahead.1 {
                            (21, ___tok0) => ___Symbol::Term_22inside__sync_22(___tok0),
                            _ => unreachable!(),
                        },
                        22 => match ___lookahead.1 {
                            (22, ___tok0) => ___Symbol::Term_22intr_22(___tok0),
                            _ => unreachable!(),
                        },
                        23 => match ___lookahead.1 {
                            (23, ___tok0) => ___Symbol::Term_22manager_22(___tok0),
                            _ => unreachable!(),
                        },
                        24 => match ___lookahead.1 {
                            (24, ___tok0) => ___Symbol::Term_22manages_22(___tok0),
                            _ => unreachable!(),
                        },
                        25 => match ___lookahead.1 {
                            (25, ___tok0) => ___Symbol::Term_22namespace_22(___tok0),
                            _ => unreachable!(),
                        },
                        26 => match ___lookahead.1 {
                            (26, ___tok0) => ___Symbol::Term_22nested_22(___tok0),
                            _ => unreachable!(),
                        },
                        27 => match ___lookahead.1 {
                            (27, ___tok0) => ___Symbol::Term_22normal_22(___tok0),
                            _ => unreachable!(),
                        },
                        28 => match ___lookahead.1 {
                            (28, ___tok0) => ___Symbol::Term_22not_22(___tok0),
                            _ => unreachable!(),
                        },
                        29 => match ___lookahead.1 {
                            (29, ___tok0) => ___Symbol::Term_22nullable_22(___tok0),
                            _ => unreachable!(),
                        },
                        30 => match ___lookahead.1 {
                            (30, ___tok0) => ___Symbol::Term_22or_22(___tok0),
                            _ => unreachable!(),
                        },
                        31 => match ___lookahead.1 {
                            (31, ___tok0) => ___Symbol::Term_22parent_22(___tok0),
                            _ => unreachable!(),
                        },
                        32 => match ___lookahead.1 {
                            (32, ___tok0) => ___Symbol::Term_22prio_22(___tok0),
                            _ => unreachable!(),
                        },
                        33 => match ___lookahead.1 {
                            (33, ___tok0) => ___Symbol::Term_22protocol_22(___tok0),
                            _ => unreachable!(),
                        },
                        34 => match ___lookahead.1 {
                            (34, ___tok0) => ___Symbol::Term_22returns_22(___tok0),
                            _ => unreachable!(),
                        },
                        35 => match ___lookahead.1 {
                            (35, ___tok0) => ___Symbol::Term_22struct_22(___tok0),
                            _ => unreachable!(),
                        },
                        36 => match ___lookahead.1 {
                            (36, ___tok0) => ___Symbol::Term_22sync_22(___tok0),
                            _ => unreachable!(),
                        },
                        37 => match ___lookahead.1 {
                            (37, ___tok0) => ___Symbol::Term_22union_22(___tok0),
                            _ => unreachable!(),
                        },
                        38 => match ___lookahead.1 {
                            (38, ___tok0) => ___Symbol::Term_22upto_22(___tok0),
                            _ => unreachable!(),
                        },
                        39 => match ___lookahead.1 {
                            (39, ___tok0) => ___Symbol::Term_22using_22(___tok0),
                            _ => unreachable!(),
                        },
                        40 => match ___lookahead.1 {
                            (40, ___tok0) => ___Symbol::Term_22verify_22(___tok0),
                            _ => unreachable!(),
                        },
                        41 => match ___lookahead.1 {
                            (41, ___tok0) => ___Symbol::Term_22_7b_22(___tok0),
                            _ => unreachable!(),
                        },
                        42 => match ___lookahead.1 {
                            (42, ___tok0) => ___Symbol::Term_22_7d_22(___tok0),
                            _ => unreachable!(),
                        },
                        43 => match ___lookahead.1 {
                            (43, ___tok0) => ___Symbol::Termr_23_22_5c_22_5b_5e_5c_22_5c_5cn_5d_2a_5c_22_22_23(___tok0),
                            _ => unreachable!(),
                        },
                        44 => match ___lookahead.1 {
                            (44, ___tok0) => ___Symbol::Termr_23_22_5ba_2dzA_2dZ___5d_5ba_2dzA_2dZ0_2d9___5d_2a_22_23(___tok0),
                            _ => unreachable!(),
                        },
                        _ => unreachable!(),
                    };
                    ___states.push(___action - 1);
                    ___symbols.push((___lookahead.0, ___symbol, ___lookahead.2));
                    continue '___shift;
                } else if ___action < 0 {
                    if let Some(r) = ___reduce(parser_state, input, ___action, Some(&___lookahead.0), &mut ___states, &mut ___symbols, ::std::marker::PhantomData::<()>) {
                        return r;
                    }
                } else {
                    return Err(___lalrpop_util::ParseError::UnrecognizedToken {
                        token: Some(___lookahead),
                        expected: vec![],
                    });
                }
            }
        }
        loop {
            let ___state = *___states.last().unwrap() as usize;
            let ___action = ___EOF_ACTION[___state];
            if ___action < 0 {
                if let Some(r) = ___reduce(parser_state, input, ___action, None, &mut ___states, &mut ___symbols, ::std::marker::PhantomData::<()>) {
                    return r;
                }
            } else {
                return Err(___lalrpop_util::ParseError::UnrecognizedToken {
                    token: None,
                    expected: vec![],
                });
            }
        }
    }
    pub fn ___reduce<
        'input,
    >(
        parser_state: &ParserState,
        input: &'input str,
        ___action: i32,
        ___lookahead_start: Option<&usize>,
        ___states: &mut ::std::vec::Vec<i32>,
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>,
        _: ::std::marker::PhantomData<()>,
    ) -> Option<Result<TranslationUnit,___lalrpop_util::ParseError<usize,(usize, &'input str),()>>>
    {
        let ___nonterminal = match -___action {
            1 => {
                // "nullable"? = "nullable" => ActionFn(75);
                let ___sym0 = ___pop_Term_22nullable_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action75::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::Nt_22nullable_22_3f(___nt), ___end));
                0
            }
            2 => {
                // "nullable"? =  => ActionFn(76);
                let ___start = ___symbols.last().map(|s| s.2.clone()).unwrap_or_default();
                let ___end = ___lookahead_start.cloned().unwrap_or_else(|| ___start.clone());
                let ___nt = super::___action76::<>(parser_state, input, &___start, &___end);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 0);
                ___symbols.push((___start, ___Symbol::Nt_22nullable_22_3f(___nt), ___end));
                0
            }
            3 => {
                // ("[" "]") = "[", "]" => ActionFn(74);
                let ___sym1 = ___pop_Term_22_5d_22(___symbols);
                let ___sym0 = ___pop_Term_22_5b_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action74::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::Nt_28_22_5b_22_20_22_5d_22_29(___nt), ___end));
                1
            }
            4 => {
                // ("[" "]")? = "[", "]" => ActionFn(106);
                let ___sym1 = ___pop_Term_22_5d_22(___symbols);
                let ___sym0 = ___pop_Term_22_5b_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action106::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::Nt_28_22_5b_22_20_22_5d_22_29_3f(___nt), ___end));
                2
            }
            5 => {
                // ("[" "]")? =  => ActionFn(73);
                let ___start = ___symbols.last().map(|s| s.2.clone()).unwrap_or_default();
                let ___end = ___lookahead_start.cloned().unwrap_or_else(|| ___start.clone());
                let ___nt = super::___action73::<>(parser_state, input, &___start, &___end);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 0);
                ___symbols.push((___start, ___Symbol::Nt_28_22_5b_22_20_22_5d_22_29_3f(___nt), ___end));
                2
            }
            6 => {
                // (PreambleStmt ";") = PreambleStmt, ";" => ActionFn(93);
                let ___sym1 = ___pop_Term_22_3b_22(___symbols);
                let ___sym0 = ___pop_NtPreambleStmt(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action93::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::Nt_28PreambleStmt_20_22_3b_22_29(___nt), ___end));
                3
            }
            7 => {
                // (PreambleStmt ";")* =  => ActionFn(91);
                let ___start = ___symbols.last().map(|s| s.2.clone()).unwrap_or_default();
                let ___end = ___lookahead_start.cloned().unwrap_or_else(|| ___start.clone());
                let ___nt = super::___action91::<>(parser_state, input, &___start, &___end);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 0);
                ___symbols.push((___start, ___Symbol::Nt_28PreambleStmt_20_22_3b_22_29_2a(___nt), ___end));
                4
            }
            8 => {
                // (PreambleStmt ";")* = (PreambleStmt ";")+ => ActionFn(92);
                let ___sym0 = ___pop_Nt_28PreambleStmt_20_22_3b_22_29_2b(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action92::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::Nt_28PreambleStmt_20_22_3b_22_29_2a(___nt), ___end));
                4
            }
            9 => {
                // (PreambleStmt ";")+ = PreambleStmt, ";" => ActionFn(109);
                let ___sym1 = ___pop_Term_22_3b_22(___symbols);
                let ___sym0 = ___pop_NtPreambleStmt(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action109::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::Nt_28PreambleStmt_20_22_3b_22_29_2b(___nt), ___end));
                5
            }
            10 => {
                // (PreambleStmt ";")+ = (PreambleStmt ";")+, PreambleStmt, ";" => ActionFn(110);
                let ___sym2 = ___pop_Term_22_3b_22(___symbols);
                let ___sym1 = ___pop_NtPreambleStmt(___symbols);
                let ___sym0 = ___pop_Nt_28PreambleStmt_20_22_3b_22_29_2b(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym2.2.clone();
                let ___nt = super::___action110::<>(parser_state, input, ___sym0, ___sym1, ___sym2);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 3);
                ___symbols.push((___start, ___Symbol::Nt_28PreambleStmt_20_22_3b_22_29_2b(___nt), ___end));
                5
            }
            11 => {
                // (StructField ";") = StructField, ";" => ActionFn(90);
                let ___sym1 = ___pop_Term_22_3b_22(___symbols);
                let ___sym0 = ___pop_NtStructField(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action90::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::Nt_28StructField_20_22_3b_22_29(___nt), ___end));
                6
            }
            12 => {
                // (StructField ";")* =  => ActionFn(88);
                let ___start = ___symbols.last().map(|s| s.2.clone()).unwrap_or_default();
                let ___end = ___lookahead_start.cloned().unwrap_or_else(|| ___start.clone());
                let ___nt = super::___action88::<>(parser_state, input, &___start, &___end);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 0);
                ___symbols.push((___start, ___Symbol::Nt_28StructField_20_22_3b_22_29_2a(___nt), ___end));
                7
            }
            13 => {
                // (StructField ";")* = (StructField ";")+ => ActionFn(89);
                let ___sym0 = ___pop_Nt_28StructField_20_22_3b_22_29_2b(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action89::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::Nt_28StructField_20_22_3b_22_29_2a(___nt), ___end));
                7
            }
            14 => {
                // (StructField ";")+ = StructField, ";" => ActionFn(113);
                let ___sym1 = ___pop_Term_22_3b_22(___symbols);
                let ___sym0 = ___pop_NtStructField(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action113::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::Nt_28StructField_20_22_3b_22_29_2b(___nt), ___end));
                8
            }
            15 => {
                // (StructField ";")+ = (StructField ";")+, StructField, ";" => ActionFn(114);
                let ___sym2 = ___pop_Term_22_3b_22(___symbols);
                let ___sym1 = ___pop_NtStructField(___symbols);
                let ___sym0 = ___pop_Nt_28StructField_20_22_3b_22_29_2b(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym2.2.clone();
                let ___nt = super::___action114::<>(parser_state, input, ___sym0, ___sym1, ___sym2);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 3);
                ___symbols.push((___start, ___Symbol::Nt_28StructField_20_22_3b_22_29_2b(___nt), ___end));
                8
            }
            16 => {
                // (Type ";") = Type, ";" => ActionFn(87);
                let ___sym1 = ___pop_Term_22_3b_22(___symbols);
                let ___sym0 = ___pop_NtType(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action87::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::Nt_28Type_20_22_3b_22_29(___nt), ___end));
                9
            }
            17 => {
                // (Type ";")+ = Type, ";" => ActionFn(117);
                let ___sym1 = ___pop_Term_22_3b_22(___symbols);
                let ___sym0 = ___pop_NtType(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action117::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::Nt_28Type_20_22_3b_22_29_2b(___nt), ___end));
                10
            }
            18 => {
                // (Type ";")+ = (Type ";")+, Type, ";" => ActionFn(118);
                let ___sym2 = ___pop_Term_22_3b_22(___symbols);
                let ___sym1 = ___pop_NtType(___symbols);
                let ___sym0 = ___pop_Nt_28Type_20_22_3b_22_29_2b(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym2.2.clone();
                let ___nt = super::___action118::<>(parser_state, input, ___sym0, ___sym1, ___sym2);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 3);
                ___symbols.push((___start, ___Symbol::Nt_28Type_20_22_3b_22_29_2b(___nt), ___end));
                10
            }
            19 => {
                // BasicType = CxxID, "[", "]" => ActionFn(107);
                let ___sym2 = ___pop_Term_22_5d_22(___symbols);
                let ___sym1 = ___pop_Term_22_5b_22(___symbols);
                let ___sym0 = ___pop_NtCxxID(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym2.2.clone();
                let ___nt = super::___action107::<>(parser_state, input, ___sym0, ___sym1, ___sym2);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 3);
                ___symbols.push((___start, ___Symbol::NtBasicType(___nt), ___end));
                11
            }
            20 => {
                // BasicType = CxxID => ActionFn(108);
                let ___sym0 = ___pop_NtCxxID(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action108::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtBasicType(___nt), ___end));
                11
            }
            21 => {
                // CxxID = ID => ActionFn(69);
                let ___sym0 = ___pop_NtID(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action69::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtCxxID(___nt), ___end));
                12
            }
            22 => {
                // CxxID = CxxTemplateInst => ActionFn(70);
                let ___sym0 = ___pop_NtCxxTemplateInst(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action70::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtCxxID(___nt), ___end));
                12
            }
            23 => {
                // CxxIncludeStmt = "include", STRING => ActionFn(8);
                let ___sym1 = ___pop_NtSTRING(___symbols);
                let ___sym0 = ___pop_Term_22include_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action8::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::NtCxxIncludeStmt(___nt), ___end));
                13
            }
            24 => {
                // CxxTemplateInst = ID, "<", ID, ">" => ActionFn(71);
                let ___sym3 = ___pop_Term_22_3e_22(___symbols);
                let ___sym2 = ___pop_NtID(___symbols);
                let ___sym1 = ___pop_Term_22_3c_22(___symbols);
                let ___sym0 = ___pop_NtID(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym3.2.clone();
                let ___nt = super::___action71::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 4);
                ___symbols.push((___start, ___Symbol::NtCxxTemplateInst(___nt), ___end));
                14
            }
            25 => {
                // CxxType = QualifiedID => ActionFn(65);
                let ___sym0 = ___pop_NtQualifiedID(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action65::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtCxxType(___nt), ___end));
                15
            }
            26 => {
                // CxxType = CxxID => ActionFn(66);
                let ___sym0 = ___pop_NtCxxID(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action66::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtCxxType(___nt), ___end));
                15
            }
            27 => {
                // CxxTypeKind = "class" => ActionFn(13);
                let ___sym0 = ___pop_Term_22class_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action13::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtCxxTypeKind(___nt), ___end));
                16
            }
            28 => {
                // CxxTypeKind = "struct" => ActionFn(14);
                let ___sym0 = ___pop_Term_22struct_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action14::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtCxxTypeKind(___nt), ___end));
                16
            }
            29 => {
                // ID = r#"[a-zA-Z_][a-zA-Z0-9_]*"# => ActionFn(1);
                let ___sym0 = ___pop_Termr_23_22_5ba_2dzA_2dZ___5d_5ba_2dzA_2dZ0_2d9___5d_2a_22_23(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action1::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtID(___nt), ___end));
                17
            }
            30 => {
                // IncludeStmt = "include", "protocol", ID => ActionFn(9);
                let ___sym2 = ___pop_NtID(___symbols);
                let ___sym1 = ___pop_Term_22protocol_22(___symbols);
                let ___sym0 = ___pop_Term_22include_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym2.2.clone();
                let ___nt = super::___action9::<>(parser_state, input, ___sym0, ___sym1, ___sym2);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 3);
                ___symbols.push((___start, ___Symbol::NtIncludeStmt(___nt), ___end));
                18
            }
            31 => {
                // IncludeStmt = "include", ID => ActionFn(10);
                let ___sym1 = ___pop_NtID(___symbols);
                let ___sym0 = ___pop_Term_22include_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action10::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::NtIncludeStmt(___nt), ___end));
                18
            }
            32 => {
                // ManagerList = ID => ActionFn(25);
                let ___sym0 = ___pop_NtID(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action25::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtManagerList(___nt), ___end));
                19
            }
            33 => {
                // ManagerList = ManagerList, "or", ID => ActionFn(26);
                let ___sym2 = ___pop_NtID(___symbols);
                let ___sym1 = ___pop_Term_22or_22(___symbols);
                let ___sym0 = ___pop_NtManagerList(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym2.2.clone();
                let ___nt = super::___action26::<>(parser_state, input, ___sym0, ___sym1, ___sym2);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 3);
                ___symbols.push((___start, ___Symbol::NtManagerList(___nt), ___end));
                19
            }
            34 => {
                // ManagersStmtOpt = "manager", ManagerList, ";" => ActionFn(23);
                let ___sym2 = ___pop_Term_22_3b_22(___symbols);
                let ___sym1 = ___pop_NtManagerList(___symbols);
                let ___sym0 = ___pop_Term_22manager_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym2.2.clone();
                let ___nt = super::___action23::<>(parser_state, input, ___sym0, ___sym1, ___sym2);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 3);
                ___symbols.push((___start, ___Symbol::NtManagersStmtOpt(___nt), ___end));
                20
            }
            35 => {
                // ManagersStmtOpt =  => ActionFn(24);
                let ___start = ___symbols.last().map(|s| s.2.clone()).unwrap_or_default();
                let ___end = ___lookahead_start.cloned().unwrap_or_else(|| ___start.clone());
                let ___nt = super::___action24::<>(parser_state, input, &___start, &___end);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 0);
                ___symbols.push((___start, ___Symbol::NtManagersStmtOpt(___nt), ___end));
                20
            }
            36 => {
                // ManagesStmt = "manages", ID, ";" => ActionFn(27);
                let ___sym2 = ___pop_Term_22_3b_22(___symbols);
                let ___sym1 = ___pop_NtID(___symbols);
                let ___sym0 = ___pop_Term_22manages_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym2.2.clone();
                let ___nt = super::___action27::<>(parser_state, input, ___sym0, ___sym1, ___sym2);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 3);
                ___symbols.push((___start, ___Symbol::NtManagesStmt(___nt), ___end));
                21
            }
            37 => {
                // ManagesStmt? = ManagesStmt => ActionFn(81);
                let ___sym0 = ___pop_NtManagesStmt(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action81::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtManagesStmt_3f(___nt), ___end));
                22
            }
            38 => {
                // ManagesStmt? =  => ActionFn(82);
                let ___start = ___symbols.last().map(|s| s.2.clone()).unwrap_or_default();
                let ___end = ___lookahead_start.cloned().unwrap_or_else(|| ___start.clone());
                let ___nt = super::___action82::<>(parser_state, input, &___start, &___end);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 0);
                ___symbols.push((___start, ___Symbol::NtManagesStmt_3f(___nt), ___end));
                22
            }
            39 => {
                // MessageBody = MessageId, "(", ParamList, ")", MessageOutParams => ActionFn(125);
                let ___sym4 = ___pop_NtMessageOutParams(___symbols);
                let ___sym3 = ___pop_Term_22_29_22(___symbols);
                let ___sym2 = ___pop_NtParamList(___symbols);
                let ___sym1 = ___pop_Term_22_28_22(___symbols);
                let ___sym0 = ___pop_NtMessageId(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym4.2.clone();
                let ___nt = super::___action125::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 5);
                ___symbols.push((___start, ___Symbol::NtMessageBody(___nt), ___end));
                23
            }
            40 => {
                // MessageBody = MessageId, "(", ParamList, ")", MessageOutParams, MessageModifier+ => ActionFn(126);
                let ___sym5 = ___pop_NtMessageModifier_2b(___symbols);
                let ___sym4 = ___pop_NtMessageOutParams(___symbols);
                let ___sym3 = ___pop_Term_22_29_22(___symbols);
                let ___sym2 = ___pop_NtParamList(___symbols);
                let ___sym1 = ___pop_Term_22_28_22(___symbols);
                let ___sym0 = ___pop_NtMessageId(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym5.2.clone();
                let ___nt = super::___action126::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4, ___sym5);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 6);
                ___symbols.push((___start, ___Symbol::NtMessageBody(___nt), ___end));
                23
            }
            41 => {
                // MessageDecl = SendSemanticsQual, MessageBody => ActionFn(33);
                let ___sym1 = ___pop_NtMessageBody(___symbols);
                let ___sym0 = ___pop_NtSendSemanticsQual(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action33::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::NtMessageDecl(___nt), ___end));
                24
            }
            42 => {
                // MessageDeclThing = MessageDirectionLabel, ":", MessageDecl, ";" => ActionFn(28);
                let ___sym3 = ___pop_Term_22_3b_22(___symbols);
                let ___sym2 = ___pop_NtMessageDecl(___symbols);
                let ___sym1 = ___pop_Term_22_3a_22(___symbols);
                let ___sym0 = ___pop_NtMessageDirectionLabel(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym3.2.clone();
                let ___nt = super::___action28::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 4);
                ___symbols.push((___start, ___Symbol::NtMessageDeclThing(___nt), ___end));
                25
            }
            43 => {
                // MessageDeclThing = MessageDecl, ";" => ActionFn(29);
                let ___sym1 = ___pop_Term_22_3b_22(___symbols);
                let ___sym0 = ___pop_NtMessageDecl(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action29::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::NtMessageDeclThing(___nt), ___end));
                25
            }
            44 => {
                // MessageDeclThing* =  => ActionFn(79);
                let ___start = ___symbols.last().map(|s| s.2.clone()).unwrap_or_default();
                let ___end = ___lookahead_start.cloned().unwrap_or_else(|| ___start.clone());
                let ___nt = super::___action79::<>(parser_state, input, &___start, &___end);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 0);
                ___symbols.push((___start, ___Symbol::NtMessageDeclThing_2a(___nt), ___end));
                26
            }
            45 => {
                // MessageDeclThing* = MessageDeclThing+ => ActionFn(80);
                let ___sym0 = ___pop_NtMessageDeclThing_2b(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action80::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtMessageDeclThing_2a(___nt), ___end));
                26
            }
            46 => {
                // MessageDeclThing+ = MessageDeclThing => ActionFn(100);
                let ___sym0 = ___pop_NtMessageDeclThing(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action100::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtMessageDeclThing_2b(___nt), ___end));
                27
            }
            47 => {
                // MessageDeclThing+ = MessageDeclThing+, MessageDeclThing => ActionFn(101);
                let ___sym1 = ___pop_NtMessageDeclThing(___symbols);
                let ___sym0 = ___pop_NtMessageDeclThing_2b(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action101::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::NtMessageDeclThing_2b(___nt), ___end));
                27
            }
            48 => {
                // MessageDirectionLabel = "parent" => ActionFn(30);
                let ___sym0 = ___pop_Term_22parent_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action30::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtMessageDirectionLabel(___nt), ___end));
                28
            }
            49 => {
                // MessageDirectionLabel = "child" => ActionFn(31);
                let ___sym0 = ___pop_Term_22child_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action31::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtMessageDirectionLabel(___nt), ___end));
                28
            }
            50 => {
                // MessageDirectionLabel = "both" => ActionFn(32);
                let ___sym0 = ___pop_Term_22both_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action32::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtMessageDirectionLabel(___nt), ___end));
                28
            }
            51 => {
                // MessageId = ID => ActionFn(35);
                let ___sym0 = ___pop_NtID(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action35::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtMessageId(___nt), ___end));
                29
            }
            52 => {
                // MessageId = "__delete__" => ActionFn(36);
                let ___sym0 = ___pop_Term_22____delete_____22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action36::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtMessageId(___nt), ___end));
                29
            }
            53 => {
                // MessageModifier = "verify" => ActionFn(39);
                let ___sym0 = ___pop_Term_22verify_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action39::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtMessageModifier(___nt), ___end));
                30
            }
            54 => {
                // MessageModifier = "compress" => ActionFn(40);
                let ___sym0 = ___pop_Term_22compress_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action40::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtMessageModifier(___nt), ___end));
                30
            }
            55 => {
                // MessageModifier = "compressall" => ActionFn(41);
                let ___sym0 = ___pop_Term_22compressall_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action41::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtMessageModifier(___nt), ___end));
                30
            }
            56 => {
                // MessageModifier* =  => ActionFn(77);
                let ___start = ___symbols.last().map(|s| s.2.clone()).unwrap_or_default();
                let ___end = ___lookahead_start.cloned().unwrap_or_else(|| ___start.clone());
                let ___nt = super::___action77::<>(parser_state, input, &___start, &___end);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 0);
                ___symbols.push((___start, ___Symbol::NtMessageModifier_2a(___nt), ___end));
                31
            }
            57 => {
                // MessageModifier* = MessageModifier+ => ActionFn(78);
                let ___sym0 = ___pop_NtMessageModifier_2b(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action78::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtMessageModifier_2a(___nt), ___end));
                31
            }
            58 => {
                // MessageModifier+ = MessageModifier => ActionFn(102);
                let ___sym0 = ___pop_NtMessageModifier(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action102::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtMessageModifier_2b(___nt), ___end));
                32
            }
            59 => {
                // MessageModifier+ = MessageModifier+, MessageModifier => ActionFn(103);
                let ___sym1 = ___pop_NtMessageModifier(___symbols);
                let ___sym0 = ___pop_NtMessageModifier_2b(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action103::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::NtMessageModifier_2b(___nt), ___end));
                32
            }
            60 => {
                // MessageOutParams = "returns", "(", ParamList, ")" => ActionFn(37);
                let ___sym3 = ___pop_Term_22_29_22(___symbols);
                let ___sym2 = ___pop_NtParamList(___symbols);
                let ___sym1 = ___pop_Term_22_28_22(___symbols);
                let ___sym0 = ___pop_Term_22returns_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym3.2.clone();
                let ___nt = super::___action37::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 4);
                ___symbols.push((___start, ___Symbol::NtMessageOutParams(___nt), ___end));
                33
            }
            61 => {
                // MessageOutParams =  => ActionFn(38);
                let ___start = ___symbols.last().map(|s| s.2.clone()).unwrap_or_default();
                let ___end = ___lookahead_start.cloned().unwrap_or_else(|| ___start.clone());
                let ___nt = super::___action38::<>(parser_state, input, &___start, &___end);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 0);
                ___symbols.push((___start, ___Symbol::NtMessageOutParams(___nt), ___end));
                33
            }
            62 => {
                // NamespaceThing = "namespace", ID, "{", NamespaceThing+, "}" => ActionFn(15);
                let ___sym4 = ___pop_Term_22_7d_22(___symbols);
                let ___sym3 = ___pop_NtNamespaceThing_2b(___symbols);
                let ___sym2 = ___pop_Term_22_7b_22(___symbols);
                let ___sym1 = ___pop_NtID(___symbols);
                let ___sym0 = ___pop_Term_22namespace_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym4.2.clone();
                let ___nt = super::___action15::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 5);
                ___symbols.push((___start, ___Symbol::NtNamespaceThing(___nt), ___end));
                34
            }
            63 => {
                // NamespaceThing = StructDecl => ActionFn(16);
                let ___sym0 = ___pop_NtStructDecl(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action16::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtNamespaceThing(___nt), ___end));
                34
            }
            64 => {
                // NamespaceThing = UnionDecl => ActionFn(17);
                let ___sym0 = ___pop_NtUnionDecl(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action17::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtNamespaceThing(___nt), ___end));
                34
            }
            65 => {
                // NamespaceThing = ProtocolDefn => ActionFn(18);
                let ___sym0 = ___pop_NtProtocolDefn(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action18::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtNamespaceThing(___nt), ___end));
                34
            }
            66 => {
                // NamespaceThing+ = NamespaceThing => ActionFn(94);
                let ___sym0 = ___pop_NtNamespaceThing(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action94::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtNamespaceThing_2b(___nt), ___end));
                35
            }
            67 => {
                // NamespaceThing+ = NamespaceThing+, NamespaceThing => ActionFn(95);
                let ___sym1 = ___pop_NtNamespaceThing(___symbols);
                let ___sym0 = ___pop_NtNamespaceThing_2b(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action95::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::NtNamespaceThing_2b(___nt), ___end));
                35
            }
            68 => {
                // Nesting = "not" => ActionFn(42);
                let ___sym0 = ___pop_Term_22not_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action42::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtNesting(___nt), ___end));
                36
            }
            69 => {
                // Nesting = "inside_sync" => ActionFn(43);
                let ___sym0 = ___pop_Term_22inside__sync_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action43::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtNesting(___nt), ___end));
                36
            }
            70 => {
                // Nesting = "inside_cpow" => ActionFn(44);
                let ___sym0 = ___pop_Term_22inside__cpow_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action44::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtNesting(___nt), ___end));
                36
            }
            71 => {
                // Param = Type, ID => ActionFn(62);
                let ___sym1 = ___pop_NtID(___symbols);
                let ___sym0 = ___pop_NtType(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action62::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::NtParam(___nt), ___end));
                37
            }
            72 => {
                // ParamList = ParamList, ",", Param => ActionFn(59);
                let ___sym2 = ___pop_NtParam(___symbols);
                let ___sym1 = ___pop_Term_22_2c_22(___symbols);
                let ___sym0 = ___pop_NtParamList(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym2.2.clone();
                let ___nt = super::___action59::<>(parser_state, input, ___sym0, ___sym1, ___sym2);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 3);
                ___symbols.push((___start, ___Symbol::NtParamList(___nt), ___end));
                38
            }
            73 => {
                // ParamList = Param => ActionFn(60);
                let ___sym0 = ___pop_NtParam(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action60::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtParamList(___nt), ___end));
                38
            }
            74 => {
                // ParamList =  => ActionFn(61);
                let ___start = ___symbols.last().map(|s| s.2.clone()).unwrap_or_default();
                let ___end = ___lookahead_start.cloned().unwrap_or_else(|| ___start.clone());
                let ___nt = super::___action61::<>(parser_state, input, &___start, &___end);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 0);
                ___symbols.push((___start, ___Symbol::NtParamList(___nt), ___end));
                38
            }
            75 => {
                // Preamble =  => ActionFn(111);
                let ___start = ___symbols.last().map(|s| s.2.clone()).unwrap_or_default();
                let ___end = ___lookahead_start.cloned().unwrap_or_else(|| ___start.clone());
                let ___nt = super::___action111::<>(parser_state, input, &___start, &___end);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 0);
                ___symbols.push((___start, ___Symbol::NtPreamble(___nt), ___end));
                39
            }
            76 => {
                // Preamble = (PreambleStmt ";")+ => ActionFn(112);
                let ___sym0 = ___pop_Nt_28PreambleStmt_20_22_3b_22_29_2b(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action112::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtPreamble(___nt), ___end));
                39
            }
            77 => {
                // PreambleStmt = CxxIncludeStmt => ActionFn(5);
                let ___sym0 = ___pop_NtCxxIncludeStmt(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action5::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtPreambleStmt(___nt), ___end));
                40
            }
            78 => {
                // PreambleStmt = IncludeStmt => ActionFn(6);
                let ___sym0 = ___pop_NtIncludeStmt(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action6::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtPreambleStmt(___nt), ___end));
                40
            }
            79 => {
                // PreambleStmt = UsingStmt => ActionFn(7);
                let ___sym0 = ___pop_NtUsingStmt(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action7::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtPreambleStmt(___nt), ___end));
                40
            }
            80 => {
                // Priority = "normal" => ActionFn(45);
                let ___sym0 = ___pop_Term_22normal_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action45::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtPriority(___nt), ___end));
                41
            }
            81 => {
                // Priority = "high" => ActionFn(46);
                let ___sym0 = ___pop_Term_22high_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action46::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtPriority(___nt), ___end));
                41
            }
            82 => {
                // ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(127);
                let ___sym7 = ___pop_Term_22_3b_22(___symbols);
                let ___sym6 = ___pop_Term_22_7d_22(___symbols);
                let ___sym5 = ___pop_NtManagesStmt(___symbols);
                let ___sym4 = ___pop_NtManagersStmtOpt(___symbols);
                let ___sym3 = ___pop_Term_22_7b_22(___symbols);
                let ___sym2 = ___pop_NtID(___symbols);
                let ___sym1 = ___pop_Term_22protocol_22(___symbols);
                let ___sym0 = ___pop_NtProtocolSendSemanticsQual(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym7.2.clone();
                let ___nt = super::___action127::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4, ___sym5, ___sym6, ___sym7);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 8);
                ___symbols.push((___start, ___Symbol::NtProtocolDefn(___nt), ___end));
                42
            }
            83 => {
                // ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, "}", ";" => ActionFn(128);
                let ___sym6 = ___pop_Term_22_3b_22(___symbols);
                let ___sym5 = ___pop_Term_22_7d_22(___symbols);
                let ___sym4 = ___pop_NtManagesStmt(___symbols);
                let ___sym3 = ___pop_NtManagersStmtOpt(___symbols);
                let ___sym2 = ___pop_Term_22_7b_22(___symbols);
                let ___sym1 = ___pop_NtID(___symbols);
                let ___sym0 = ___pop_Term_22protocol_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym6.2.clone();
                let ___nt = super::___action128::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4, ___sym5, ___sym6);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 7);
                ___symbols.push((___start, ___Symbol::NtProtocolDefn(___nt), ___end));
                42
            }
            84 => {
                // ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(129);
                let ___sym8 = ___pop_Term_22_3b_22(___symbols);
                let ___sym7 = ___pop_Term_22_7d_22(___symbols);
                let ___sym6 = ___pop_NtMessageDeclThing_2b(___symbols);
                let ___sym5 = ___pop_NtManagesStmt(___symbols);
                let ___sym4 = ___pop_NtManagersStmtOpt(___symbols);
                let ___sym3 = ___pop_Term_22_7b_22(___symbols);
                let ___sym2 = ___pop_NtID(___symbols);
                let ___sym1 = ___pop_Term_22protocol_22(___symbols);
                let ___sym0 = ___pop_NtProtocolSendSemanticsQual(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym8.2.clone();
                let ___nt = super::___action129::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4, ___sym5, ___sym6, ___sym7, ___sym8);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 9);
                ___symbols.push((___start, ___Symbol::NtProtocolDefn(___nt), ___end));
                42
            }
            85 => {
                // ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, ManagesStmt, MessageDeclThing+, "}", ";" => ActionFn(130);
                let ___sym7 = ___pop_Term_22_3b_22(___symbols);
                let ___sym6 = ___pop_Term_22_7d_22(___symbols);
                let ___sym5 = ___pop_NtMessageDeclThing_2b(___symbols);
                let ___sym4 = ___pop_NtManagesStmt(___symbols);
                let ___sym3 = ___pop_NtManagersStmtOpt(___symbols);
                let ___sym2 = ___pop_Term_22_7b_22(___symbols);
                let ___sym1 = ___pop_NtID(___symbols);
                let ___sym0 = ___pop_Term_22protocol_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym7.2.clone();
                let ___nt = super::___action130::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4, ___sym5, ___sym6, ___sym7);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 8);
                ___symbols.push((___start, ___Symbol::NtProtocolDefn(___nt), ___end));
                42
            }
            86 => {
                // ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(131);
                let ___sym6 = ___pop_Term_22_3b_22(___symbols);
                let ___sym5 = ___pop_Term_22_7d_22(___symbols);
                let ___sym4 = ___pop_NtManagersStmtOpt(___symbols);
                let ___sym3 = ___pop_Term_22_7b_22(___symbols);
                let ___sym2 = ___pop_NtID(___symbols);
                let ___sym1 = ___pop_Term_22protocol_22(___symbols);
                let ___sym0 = ___pop_NtProtocolSendSemanticsQual(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym6.2.clone();
                let ___nt = super::___action131::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4, ___sym5, ___sym6);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 7);
                ___symbols.push((___start, ___Symbol::NtProtocolDefn(___nt), ___end));
                42
            }
            87 => {
                // ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, "}", ";" => ActionFn(132);
                let ___sym5 = ___pop_Term_22_3b_22(___symbols);
                let ___sym4 = ___pop_Term_22_7d_22(___symbols);
                let ___sym3 = ___pop_NtManagersStmtOpt(___symbols);
                let ___sym2 = ___pop_Term_22_7b_22(___symbols);
                let ___sym1 = ___pop_NtID(___symbols);
                let ___sym0 = ___pop_Term_22protocol_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym5.2.clone();
                let ___nt = super::___action132::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4, ___sym5);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 6);
                ___symbols.push((___start, ___Symbol::NtProtocolDefn(___nt), ___end));
                42
            }
            88 => {
                // ProtocolDefn = ProtocolSendSemanticsQual, "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(133);
                let ___sym7 = ___pop_Term_22_3b_22(___symbols);
                let ___sym6 = ___pop_Term_22_7d_22(___symbols);
                let ___sym5 = ___pop_NtMessageDeclThing_2b(___symbols);
                let ___sym4 = ___pop_NtManagersStmtOpt(___symbols);
                let ___sym3 = ___pop_Term_22_7b_22(___symbols);
                let ___sym2 = ___pop_NtID(___symbols);
                let ___sym1 = ___pop_Term_22protocol_22(___symbols);
                let ___sym0 = ___pop_NtProtocolSendSemanticsQual(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym7.2.clone();
                let ___nt = super::___action133::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4, ___sym5, ___sym6, ___sym7);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 8);
                ___symbols.push((___start, ___Symbol::NtProtocolDefn(___nt), ___end));
                42
            }
            89 => {
                // ProtocolDefn = "protocol", ID, "{", ManagersStmtOpt, MessageDeclThing+, "}", ";" => ActionFn(134);
                let ___sym6 = ___pop_Term_22_3b_22(___symbols);
                let ___sym5 = ___pop_Term_22_7d_22(___symbols);
                let ___sym4 = ___pop_NtMessageDeclThing_2b(___symbols);
                let ___sym3 = ___pop_NtManagersStmtOpt(___symbols);
                let ___sym2 = ___pop_Term_22_7b_22(___symbols);
                let ___sym1 = ___pop_NtID(___symbols);
                let ___sym0 = ___pop_Term_22protocol_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym6.2.clone();
                let ___nt = super::___action134::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4, ___sym5, ___sym6);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 7);
                ___symbols.push((___start, ___Symbol::NtProtocolDefn(___nt), ___end));
                42
            }
            90 => {
                // ProtocolSendSemanticsQual = "async" => ActionFn(54);
                let ___sym0 = ___pop_Term_22async_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action54::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtProtocolSendSemanticsQual(___nt), ___end));
                43
            }
            91 => {
                // ProtocolSendSemanticsQual = "sync" => ActionFn(55);
                let ___sym0 = ___pop_Term_22sync_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action55::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtProtocolSendSemanticsQual(___nt), ___end));
                43
            }
            92 => {
                // ProtocolSendSemanticsQual = "nested", "(", "upto", Nesting, ")", "async" => ActionFn(56);
                let ___sym5 = ___pop_Term_22async_22(___symbols);
                let ___sym4 = ___pop_Term_22_29_22(___symbols);
                let ___sym3 = ___pop_NtNesting(___symbols);
                let ___sym2 = ___pop_Term_22upto_22(___symbols);
                let ___sym1 = ___pop_Term_22_28_22(___symbols);
                let ___sym0 = ___pop_Term_22nested_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym5.2.clone();
                let ___nt = super::___action56::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4, ___sym5);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 6);
                ___symbols.push((___start, ___Symbol::NtProtocolSendSemanticsQual(___nt), ___end));
                43
            }
            93 => {
                // ProtocolSendSemanticsQual = "nested", "(", "upto", Nesting, ")", "sync" => ActionFn(57);
                let ___sym5 = ___pop_Term_22sync_22(___symbols);
                let ___sym4 = ___pop_Term_22_29_22(___symbols);
                let ___sym3 = ___pop_NtNesting(___symbols);
                let ___sym2 = ___pop_Term_22upto_22(___symbols);
                let ___sym1 = ___pop_Term_22_28_22(___symbols);
                let ___sym0 = ___pop_Term_22nested_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym5.2.clone();
                let ___nt = super::___action57::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4, ___sym5);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 6);
                ___symbols.push((___start, ___Symbol::NtProtocolSendSemanticsQual(___nt), ___end));
                43
            }
            94 => {
                // ProtocolSendSemanticsQual = "intr" => ActionFn(58);
                let ___sym0 = ___pop_Term_22intr_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action58::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtProtocolSendSemanticsQual(___nt), ___end));
                43
            }
            95 => {
                // ProtocolSendSemanticsQual? = ProtocolSendSemanticsQual => ActionFn(83);
                let ___sym0 = ___pop_NtProtocolSendSemanticsQual(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action83::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtProtocolSendSemanticsQual_3f(___nt), ___end));
                44
            }
            96 => {
                // ProtocolSendSemanticsQual? =  => ActionFn(84);
                let ___start = ___symbols.last().map(|s| s.2.clone()).unwrap_or_default();
                let ___end = ___lookahead_start.cloned().unwrap_or_else(|| ___start.clone());
                let ___nt = super::___action84::<>(parser_state, input, &___start, &___end);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 0);
                ___symbols.push((___start, ___Symbol::NtProtocolSendSemanticsQual_3f(___nt), ___end));
                44
            }
            97 => {
                // QualifiedID = QualifiedID, "::", CxxID => ActionFn(67);
                let ___sym2 = ___pop_NtCxxID(___symbols);
                let ___sym1 = ___pop_Term_22_3a_3a_22(___symbols);
                let ___sym0 = ___pop_NtQualifiedID(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym2.2.clone();
                let ___nt = super::___action67::<>(parser_state, input, ___sym0, ___sym1, ___sym2);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 3);
                ___symbols.push((___start, ___Symbol::NtQualifiedID(___nt), ___end));
                45
            }
            98 => {
                // QualifiedID = CxxID, "::", CxxID => ActionFn(68);
                let ___sym2 = ___pop_NtCxxID(___symbols);
                let ___sym1 = ___pop_Term_22_3a_3a_22(___symbols);
                let ___sym0 = ___pop_NtCxxID(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym2.2.clone();
                let ___nt = super::___action68::<>(parser_state, input, ___sym0, ___sym1, ___sym2);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 3);
                ___symbols.push((___start, ___Symbol::NtQualifiedID(___nt), ___end));
                45
            }
            99 => {
                // STRING = r#"\"[^\"\\n]*\""# => ActionFn(2);
                let ___sym0 = ___pop_Termr_23_22_5c_22_5b_5e_5c_22_5c_5cn_5d_2a_5c_22_22_23(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action2::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtSTRING(___nt), ___end));
                46
            }
            100 => {
                // SendQualifier = "nested", "(", Nesting, ")" => ActionFn(47);
                let ___sym3 = ___pop_Term_22_29_22(___symbols);
                let ___sym2 = ___pop_NtNesting(___symbols);
                let ___sym1 = ___pop_Term_22_28_22(___symbols);
                let ___sym0 = ___pop_Term_22nested_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym3.2.clone();
                let ___nt = super::___action47::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 4);
                ___symbols.push((___start, ___Symbol::NtSendQualifier(___nt), ___end));
                47
            }
            101 => {
                // SendQualifier = "prio", "(", Priority, ")" => ActionFn(48);
                let ___sym3 = ___pop_Term_22_29_22(___symbols);
                let ___sym2 = ___pop_NtPriority(___symbols);
                let ___sym1 = ___pop_Term_22_28_22(___symbols);
                let ___sym0 = ___pop_Term_22prio_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym3.2.clone();
                let ___nt = super::___action48::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 4);
                ___symbols.push((___start, ___Symbol::NtSendQualifier(___nt), ___end));
                47
            }
            102 => {
                // SendQualifierList = SendQualifier, SendQualifierList => ActionFn(49);
                let ___sym1 = ___pop_NtSendQualifierList(___symbols);
                let ___sym0 = ___pop_NtSendQualifier(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action49::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::NtSendQualifierList(___nt), ___end));
                48
            }
            103 => {
                // SendQualifierList =  => ActionFn(50);
                let ___start = ___symbols.last().map(|s| s.2.clone()).unwrap_or_default();
                let ___end = ___lookahead_start.cloned().unwrap_or_else(|| ___start.clone());
                let ___nt = super::___action50::<>(parser_state, input, &___start, &___end);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 0);
                ___symbols.push((___start, ___Symbol::NtSendQualifierList(___nt), ___end));
                48
            }
            104 => {
                // SendSemanticsQual = SendQualifierList, "async" => ActionFn(51);
                let ___sym1 = ___pop_Term_22async_22(___symbols);
                let ___sym0 = ___pop_NtSendQualifierList(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action51::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::NtSendSemanticsQual(___nt), ___end));
                49
            }
            105 => {
                // SendSemanticsQual = SendQualifierList, "sync" => ActionFn(52);
                let ___sym1 = ___pop_Term_22sync_22(___symbols);
                let ___sym0 = ___pop_NtSendQualifierList(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action52::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::NtSendSemanticsQual(___nt), ___end));
                49
            }
            106 => {
                // SendSemanticsQual = "intr" => ActionFn(53);
                let ___sym0 = ___pop_Term_22intr_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action53::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtSendSemanticsQual(___nt), ___end));
                49
            }
            107 => {
                // StructDecl = "struct", ID, "{", "}", ";" => ActionFn(115);
                let ___sym4 = ___pop_Term_22_3b_22(___symbols);
                let ___sym3 = ___pop_Term_22_7d_22(___symbols);
                let ___sym2 = ___pop_Term_22_7b_22(___symbols);
                let ___sym1 = ___pop_NtID(___symbols);
                let ___sym0 = ___pop_Term_22struct_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym4.2.clone();
                let ___nt = super::___action115::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 5);
                ___symbols.push((___start, ___Symbol::NtStructDecl(___nt), ___end));
                50
            }
            108 => {
                // StructDecl = "struct", ID, "{", (StructField ";")+, "}", ";" => ActionFn(116);
                let ___sym5 = ___pop_Term_22_3b_22(___symbols);
                let ___sym4 = ___pop_Term_22_7d_22(___symbols);
                let ___sym3 = ___pop_Nt_28StructField_20_22_3b_22_29_2b(___symbols);
                let ___sym2 = ___pop_Term_22_7b_22(___symbols);
                let ___sym1 = ___pop_NtID(___symbols);
                let ___sym0 = ___pop_Term_22struct_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym5.2.clone();
                let ___nt = super::___action116::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4, ___sym5);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 6);
                ___symbols.push((___start, ___Symbol::NtStructDecl(___nt), ___end));
                50
            }
            109 => {
                // StructField = Type, ID => ActionFn(20);
                let ___sym1 = ___pop_NtID(___symbols);
                let ___sym0 = ___pop_NtType(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action20::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::NtStructField(___nt), ___end));
                51
            }
            110 => {
                // TranslationUnit = Preamble, NamespaceThing+ => ActionFn(3);
                let ___sym1 = ___pop_NtNamespaceThing_2b(___symbols);
                let ___sym0 = ___pop_NtPreamble(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action3::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::NtTranslationUnit(___nt), ___end));
                52
            }
            111 => {
                // Type = "nullable", BasicType => ActionFn(104);
                let ___sym1 = ___pop_NtBasicType(___symbols);
                let ___sym0 = ___pop_Term_22nullable_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym1.2.clone();
                let ___nt = super::___action104::<>(parser_state, input, ___sym0, ___sym1);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 2);
                ___symbols.push((___start, ___Symbol::NtType(___nt), ___end));
                53
            }
            112 => {
                // Type = BasicType => ActionFn(105);
                let ___sym0 = ___pop_NtBasicType(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action105::<>(parser_state, input, ___sym0);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 1);
                ___symbols.push((___start, ___Symbol::NtType(___nt), ___end));
                53
            }
            113 => {
                // UnionDecl = "union", ID, "{", (Type ";")+, "}", ";" => ActionFn(21);
                let ___sym5 = ___pop_Term_22_3b_22(___symbols);
                let ___sym4 = ___pop_Term_22_7d_22(___symbols);
                let ___sym3 = ___pop_Nt_28Type_20_22_3b_22_29_2b(___symbols);
                let ___sym2 = ___pop_Term_22_7b_22(___symbols);
                let ___sym1 = ___pop_NtID(___symbols);
                let ___sym0 = ___pop_Term_22union_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym5.2.clone();
                let ___nt = super::___action21::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4, ___sym5);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 6);
                ___symbols.push((___start, ___Symbol::NtUnionDecl(___nt), ___end));
                54
            }
            114 => {
                // UsingStmt = "using", CxxType, "from", STRING => ActionFn(11);
                let ___sym3 = ___pop_NtSTRING(___symbols);
                let ___sym2 = ___pop_Term_22from_22(___symbols);
                let ___sym1 = ___pop_NtCxxType(___symbols);
                let ___sym0 = ___pop_Term_22using_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym3.2.clone();
                let ___nt = super::___action11::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 4);
                ___symbols.push((___start, ___Symbol::NtUsingStmt(___nt), ___end));
                55
            }
            115 => {
                // UsingStmt = "using", CxxTypeKind, CxxType, "from", STRING => ActionFn(12);
                let ___sym4 = ___pop_NtSTRING(___symbols);
                let ___sym3 = ___pop_Term_22from_22(___symbols);
                let ___sym2 = ___pop_NtCxxType(___symbols);
                let ___sym1 = ___pop_NtCxxTypeKind(___symbols);
                let ___sym0 = ___pop_Term_22using_22(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym4.2.clone();
                let ___nt = super::___action12::<>(parser_state, input, ___sym0, ___sym1, ___sym2, ___sym3, ___sym4);
                let ___states_len = ___states.len();
                ___states.truncate(___states_len - 5);
                ___symbols.push((___start, ___Symbol::NtUsingStmt(___nt), ___end));
                55
            }
            116 => {
                // ___TranslationUnit = TranslationUnit => ActionFn(0);
                let ___sym0 = ___pop_NtTranslationUnit(___symbols);
                let ___start = ___sym0.0.clone();
                let ___end = ___sym0.2.clone();
                let ___nt = super::___action0::<>(parser_state, input, ___sym0);
                return Some(Ok(___nt));
            }
            _ => panic!("invalid action code {}", ___action)
        };
        let ___state = *___states.last().unwrap() as usize;
        let ___next_state = ___GOTO[___state * 57 + ___nonterminal] - 1;
        ___states.push(___next_state);
        None
    }
    fn ___pop_Term_22_28_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22_28_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22_29_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22_29_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22_2c_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22_2c_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22_3a_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22_3a_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22_3a_3a_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22_3a_3a_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22_3b_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22_3b_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22_3c_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22_3c_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22_3e_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22_3e_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22_5b_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22_5b_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22_5d_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22_5d_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22____delete_____22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22____delete_____22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22async_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22async_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22both_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22both_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22child_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22child_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22class_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22class_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22compress_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22compress_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22compressall_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22compressall_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22from_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22from_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22high_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22high_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22include_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22include_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22inside__cpow_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22inside__cpow_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22inside__sync_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22inside__sync_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22intr_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22intr_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22manager_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22manager_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22manages_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22manages_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22namespace_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22namespace_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22nested_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22nested_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22normal_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22normal_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22not_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22not_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22nullable_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22nullable_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22or_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22or_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22parent_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22parent_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22prio_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22prio_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22protocol_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22protocol_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22returns_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22returns_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22struct_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22struct_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22sync_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22sync_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22union_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22union_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22upto_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22upto_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22using_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22using_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22verify_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22verify_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22_7b_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22_7b_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Term_22_7d_22<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Term_22_7d_22(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Termr_23_22_5c_22_5b_5e_5c_22_5c_5cn_5d_2a_5c_22_22_23<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Termr_23_22_5c_22_5b_5e_5c_22_5c_5cn_5d_2a_5c_22_22_23(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Termr_23_22_5ba_2dzA_2dZ___5d_5ba_2dzA_2dZ0_2d9___5d_2a_22_23<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, &'input str, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Termr_23_22_5ba_2dzA_2dZ___5d_5ba_2dzA_2dZ0_2d9___5d_2a_22_23(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Nt_22nullable_22_3f<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, ::std::option::Option<&'input str>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Nt_22nullable_22_3f(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Nt_28_22_5b_22_20_22_5d_22_29<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, (&'input str, &'input str), usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Nt_28_22_5b_22_20_22_5d_22_29(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Nt_28_22_5b_22_20_22_5d_22_29_3f<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, ::std::option::Option<(&'input str, &'input str)>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Nt_28_22_5b_22_20_22_5d_22_29_3f(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Nt_28PreambleStmt_20_22_3b_22_29<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, (PreambleStmt, &'input str), usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Nt_28PreambleStmt_20_22_3b_22_29(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Nt_28PreambleStmt_20_22_3b_22_29_2a<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, ::std::vec::Vec<(PreambleStmt, &'input str)>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Nt_28PreambleStmt_20_22_3b_22_29_2a(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Nt_28PreambleStmt_20_22_3b_22_29_2b<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, ::std::vec::Vec<(PreambleStmt, &'input str)>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Nt_28PreambleStmt_20_22_3b_22_29_2b(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Nt_28StructField_20_22_3b_22_29<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, (StructField, &'input str), usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Nt_28StructField_20_22_3b_22_29(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Nt_28StructField_20_22_3b_22_29_2a<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, ::std::vec::Vec<(StructField, &'input str)>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Nt_28StructField_20_22_3b_22_29_2a(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Nt_28StructField_20_22_3b_22_29_2b<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, ::std::vec::Vec<(StructField, &'input str)>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Nt_28StructField_20_22_3b_22_29_2b(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Nt_28Type_20_22_3b_22_29<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, (TypeSpec, &'input str), usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Nt_28Type_20_22_3b_22_29(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Nt_28Type_20_22_3b_22_29_2b<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, ::std::vec::Vec<(TypeSpec, &'input str)>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Nt_28Type_20_22_3b_22_29_2b(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtBasicType<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, TypeSpec, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtBasicType(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtCxxID<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, String, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtCxxID(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtCxxIncludeStmt<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, PreambleStmt, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtCxxIncludeStmt(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtCxxTemplateInst<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, String, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtCxxTemplateInst(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtCxxType<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, TypeSpec, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtCxxType(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtCxxTypeKind<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, CxxTypeKind, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtCxxTypeKind(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtID<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, String, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtID(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtIncludeStmt<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, PreambleStmt, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtIncludeStmt(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtManagerList<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, Vec<String>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtManagerList(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtManagersStmtOpt<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, Vec<String>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtManagersStmtOpt(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtManagesStmt<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, String, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtManagesStmt(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtManagesStmt_3f<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, ::std::option::Option<String>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtManagesStmt_3f(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtMessageBody<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, MessageDecl, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtMessageBody(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtMessageDecl<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, MessageDecl, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtMessageDecl(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtMessageDeclThing<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, MessageDecl, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtMessageDeclThing(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtMessageDeclThing_2a<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, ::std::vec::Vec<MessageDecl>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtMessageDeclThing_2a(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtMessageDeclThing_2b<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, ::std::vec::Vec<MessageDecl>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtMessageDeclThing_2b(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtMessageDirectionLabel<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, (), usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtMessageDirectionLabel(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtMessageId<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, String, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtMessageId(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtMessageModifier<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, MessageModifier, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtMessageModifier(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtMessageModifier_2a<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, ::std::vec::Vec<MessageModifier>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtMessageModifier_2a(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtMessageModifier_2b<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, ::std::vec::Vec<MessageModifier>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtMessageModifier_2b(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtMessageOutParams<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, Vec<Param>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtMessageOutParams(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtNamespaceThing<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, Vec<(Namespace, TopLevelDecl)>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtNamespaceThing(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtNamespaceThing_2b<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, ::std::vec::Vec<Vec<(Namespace, TopLevelDecl)>>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtNamespaceThing_2b(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtNesting<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, Nesting, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtNesting(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtParam<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, Param, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtParam(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtParamList<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, Vec<Param>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtParamList(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtPreamble<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, Vec<PreambleStmt>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtPreamble(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtPreambleStmt<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, PreambleStmt, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtPreambleStmt(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtPriority<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, Priority, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtPriority(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtProtocolDefn<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, (Namespace, Protocol), usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtProtocolDefn(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtProtocolSendSemanticsQual<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, (Nesting, SendSemantics), usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtProtocolSendSemanticsQual(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtProtocolSendSemanticsQual_3f<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, ::std::option::Option<(Nesting, SendSemantics)>, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtProtocolSendSemanticsQual_3f(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtQualifiedID<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, QualifiedId, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtQualifiedID(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtSTRING<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, String, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtSTRING(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtSendQualifier<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, (Option<Nesting>, Option<Priority>), usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtSendQualifier(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtSendQualifierList<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, (Option<Nesting>, Option<Priority>), usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtSendQualifierList(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtSendSemanticsQual<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, (Nesting, Priority, SendSemantics), usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtSendSemanticsQual(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtStructDecl<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, (Namespace, Vec<StructField>), usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtStructDecl(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtStructField<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, StructField, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtStructField(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtTranslationUnit<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, TranslationUnit, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtTranslationUnit(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtType<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, TypeSpec, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtType(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtUnionDecl<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, (Namespace, Vec<TypeSpec>), usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtUnionDecl(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_NtUsingStmt<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, PreambleStmt, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::NtUsingStmt(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
    fn ___pop_Nt______TranslationUnit<
      'input,
    >(
        ___symbols: &mut ::std::vec::Vec<(usize,___Symbol<'input>,usize)>
    ) -> (usize, TranslationUnit, usize) {
        match ___symbols.pop().unwrap() {
            (___l, ___Symbol::Nt______TranslationUnit(___v), ___r) => (___l, ___v, ___r),
            _ => panic!("symbol type mismatch")
        }
    }
}
pub use self::___parse___TranslationUnit::parse_TranslationUnit;
mod ___intern_token {
    extern crate lalrpop_util as ___lalrpop_util;
    pub struct ___Matcher<'input> {
        text: &'input str,
        consumed: usize,
    }

    fn ___tokenize(text: &str) -> Option<(usize, usize)> {
        let mut ___chars = text.char_indices();
        let mut ___current_match: Option<(usize, usize)> = None;
        let mut ___current_state: usize = 0;
        loop {
            match ___current_state {
                0 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        34 => /* '\"' */ {
                            ___current_state = 1;
                            continue;
                        }
                        40 => /* '(' */ {
                            ___current_match = Some((0, ___index + 1));
                            ___current_state = 2;
                            continue;
                        }
                        41 => /* ')' */ {
                            ___current_match = Some((1, ___index + 1));
                            ___current_state = 3;
                            continue;
                        }
                        44 => /* ',' */ {
                            ___current_match = Some((2, ___index + 1));
                            ___current_state = 4;
                            continue;
                        }
                        58 => /* ':' */ {
                            ___current_match = Some((3, ___index + 1));
                            ___current_state = 5;
                            continue;
                        }
                        59 => /* ';' */ {
                            ___current_match = Some((5, ___index + 1));
                            ___current_state = 6;
                            continue;
                        }
                        60 => /* '<' */ {
                            ___current_match = Some((6, ___index + 1));
                            ___current_state = 7;
                            continue;
                        }
                        62 => /* '>' */ {
                            ___current_match = Some((7, ___index + 1));
                            ___current_state = 8;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 9;
                            continue;
                        }
                        91 => /* '[' */ {
                            ___current_match = Some((8, ___index + 1));
                            ___current_state = 10;
                            continue;
                        }
                        93 => /* ']' */ {
                            ___current_match = Some((9, ___index + 1));
                            ___current_state = 11;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 12;
                            continue;
                        }
                        97 => /* 'a' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 13;
                            continue;
                        }
                        98 => /* 'b' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 14;
                            continue;
                        }
                        99 => /* 'c' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 15;
                            continue;
                        }
                        100 ... 101 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 9;
                            continue;
                        }
                        102 => /* 'f' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 16;
                            continue;
                        }
                        103 => /* 'g' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 9;
                            continue;
                        }
                        104 => /* 'h' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 17;
                            continue;
                        }
                        105 => /* 'i' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 18;
                            continue;
                        }
                        106 ... 108 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 9;
                            continue;
                        }
                        109 => /* 'm' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 19;
                            continue;
                        }
                        110 => /* 'n' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 20;
                            continue;
                        }
                        111 => /* 'o' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 21;
                            continue;
                        }
                        112 => /* 'p' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 22;
                            continue;
                        }
                        113 => /* 'q' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 9;
                            continue;
                        }
                        114 => /* 'r' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 23;
                            continue;
                        }
                        115 => /* 's' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 24;
                            continue;
                        }
                        116 => /* 't' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 9;
                            continue;
                        }
                        117 => /* 'u' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 25;
                            continue;
                        }
                        118 => /* 'v' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 26;
                            continue;
                        }
                        119 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 9;
                            continue;
                        }
                        123 => /* '{' */ {
                            ___current_match = Some((41, ___index + 1));
                            ___current_state = 27;
                            continue;
                        }
                        125 => /* '}' */ {
                            ___current_match = Some((42, ___index + 1));
                            ___current_state = 28;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                1 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        0 ... 9 => {
                            ___current_state = 30;
                            continue;
                        }
                        11 ... 33 => {
                            ___current_state = 30;
                            continue;
                        }
                        34 => /* '\"' */ {
                            ___current_match = Some((43, ___index + 1));
                            ___current_state = 31;
                            continue;
                        }
                        35 ... 1114111 => {
                            ___current_state = 30;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                2 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                3 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                4 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                5 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        58 => /* ':' */ {
                            ___current_match = Some((4, ___index + 1));
                            ___current_state = 32;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                6 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                7 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                8 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                9 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                10 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                11 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                12 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 34;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                13 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 114 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        115 => /* 's' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 35;
                            continue;
                        }
                        116 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                14 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 110 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        111 => /* 'o' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 36;
                            continue;
                        }
                        112 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                15 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 103 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        104 => /* 'h' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 37;
                            continue;
                        }
                        105 ... 107 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        108 => /* 'l' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 38;
                            continue;
                        }
                        109 ... 110 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        111 => /* 'o' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 39;
                            continue;
                        }
                        112 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                16 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 113 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        114 => /* 'r' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 40;
                            continue;
                        }
                        115 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                17 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 104 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        105 => /* 'i' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 41;
                            continue;
                        }
                        106 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                18 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 109 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        110 => /* 'n' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 42;
                            continue;
                        }
                        111 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                19 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 => /* 'a' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 43;
                            continue;
                        }
                        98 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                20 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 => /* 'a' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 44;
                            continue;
                        }
                        98 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 45;
                            continue;
                        }
                        102 ... 110 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        111 => /* 'o' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 46;
                            continue;
                        }
                        112 ... 116 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        117 => /* 'u' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 47;
                            continue;
                        }
                        118 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                21 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 113 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        114 => /* 'r' */ {
                            ___current_match = Some((30, ___index + 1));
                            ___current_state = 48;
                            continue;
                        }
                        115 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                22 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 => /* 'a' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 49;
                            continue;
                        }
                        98 ... 113 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        114 => /* 'r' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 50;
                            continue;
                        }
                        115 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                23 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 51;
                            continue;
                        }
                        102 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                24 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 115 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        116 => /* 't' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 52;
                            continue;
                        }
                        117 ... 120 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        121 => /* 'y' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 53;
                            continue;
                        }
                        122 => /* 'z' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                25 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 109 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        110 => /* 'n' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 54;
                            continue;
                        }
                        111 => /* 'o' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        112 => /* 'p' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 55;
                            continue;
                        }
                        113 ... 114 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        115 => /* 's' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 56;
                            continue;
                        }
                        116 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                26 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 57;
                            continue;
                        }
                        102 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                27 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                28 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                29 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                30 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        0 ... 9 => {
                            ___current_state = 30;
                            continue;
                        }
                        11 ... 33 => {
                            ___current_state = 30;
                            continue;
                        }
                        34 => /* '\"' */ {
                            ___current_match = Some((43, ___index + 1));
                            ___current_state = 31;
                            continue;
                        }
                        35 ... 1114111 => {
                            ___current_state = 30;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                31 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                32 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                33 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                34 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 99 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        100 => /* 'd' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 58;
                            continue;
                        }
                        101 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                35 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 120 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        121 => /* 'y' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 59;
                            continue;
                        }
                        122 => /* 'z' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                36 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 115 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        116 => /* 't' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 60;
                            continue;
                        }
                        117 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                37 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 104 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        105 => /* 'i' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 61;
                            continue;
                        }
                        106 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                38 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 => /* 'a' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 62;
                            continue;
                        }
                        98 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                39 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 108 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        109 => /* 'm' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 63;
                            continue;
                        }
                        110 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                40 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 110 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        111 => /* 'o' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 64;
                            continue;
                        }
                        112 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                41 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 102 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        103 => /* 'g' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 65;
                            continue;
                        }
                        104 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                42 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 98 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        99 => /* 'c' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 66;
                            continue;
                        }
                        100 ... 114 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        115 => /* 's' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 67;
                            continue;
                        }
                        116 => /* 't' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 68;
                            continue;
                        }
                        117 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                43 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 109 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        110 => /* 'n' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 69;
                            continue;
                        }
                        111 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                44 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 108 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        109 => /* 'm' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 70;
                            continue;
                        }
                        110 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                45 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 114 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        115 => /* 's' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 71;
                            continue;
                        }
                        116 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                46 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 113 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        114 => /* 'r' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 72;
                            continue;
                        }
                        115 => /* 's' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        116 => /* 't' */ {
                            ___current_match = Some((28, ___index + 1));
                            ___current_state = 73;
                            continue;
                        }
                        117 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                47 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 107 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        108 => /* 'l' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 74;
                            continue;
                        }
                        109 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                48 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                49 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 113 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        114 => /* 'r' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 75;
                            continue;
                        }
                        115 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                50 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 104 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        105 => /* 'i' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 76;
                            continue;
                        }
                        106 ... 110 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        111 => /* 'o' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 77;
                            continue;
                        }
                        112 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                51 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 115 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        116 => /* 't' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 78;
                            continue;
                        }
                        117 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                52 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 113 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        114 => /* 'r' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 79;
                            continue;
                        }
                        115 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                53 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 109 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        110 => /* 'n' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 80;
                            continue;
                        }
                        111 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                54 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 104 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        105 => /* 'i' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 81;
                            continue;
                        }
                        106 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                55 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 115 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        116 => /* 't' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 82;
                            continue;
                        }
                        117 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                56 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 104 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        105 => /* 'i' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 83;
                            continue;
                        }
                        106 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                57 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 113 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        114 => /* 'r' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 84;
                            continue;
                        }
                        115 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                58 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 85;
                            continue;
                        }
                        102 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                59 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 109 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        110 => /* 'n' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 86;
                            continue;
                        }
                        111 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                60 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 103 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        104 => /* 'h' */ {
                            ___current_match = Some((12, ___index + 1));
                            ___current_state = 87;
                            continue;
                        }
                        105 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                61 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 107 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        108 => /* 'l' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 88;
                            continue;
                        }
                        109 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                62 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 114 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        115 => /* 's' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 89;
                            continue;
                        }
                        116 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                63 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 111 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        112 => /* 'p' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 90;
                            continue;
                        }
                        113 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                64 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 108 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        109 => /* 'm' */ {
                            ___current_match = Some((17, ___index + 1));
                            ___current_state = 91;
                            continue;
                        }
                        110 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                65 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 103 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        104 => /* 'h' */ {
                            ___current_match = Some((18, ___index + 1));
                            ___current_state = 92;
                            continue;
                        }
                        105 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                66 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 107 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        108 => /* 'l' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 93;
                            continue;
                        }
                        109 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                67 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 104 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        105 => /* 'i' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 94;
                            continue;
                        }
                        106 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                68 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 113 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        114 => /* 'r' */ {
                            ___current_match = Some((22, ___index + 1));
                            ___current_state = 95;
                            continue;
                        }
                        115 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                69 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 => /* 'a' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 96;
                            continue;
                        }
                        98 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                70 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 97;
                            continue;
                        }
                        102 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                71 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 115 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        116 => /* 't' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 98;
                            continue;
                        }
                        117 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                72 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 108 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        109 => /* 'm' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 99;
                            continue;
                        }
                        110 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                73 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                74 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 107 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        108 => /* 'l' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 100;
                            continue;
                        }
                        109 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                75 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 101;
                            continue;
                        }
                        102 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                76 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 110 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        111 => /* 'o' */ {
                            ___current_match = Some((32, ___index + 1));
                            ___current_state = 102;
                            continue;
                        }
                        112 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                77 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 115 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        116 => /* 't' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 103;
                            continue;
                        }
                        117 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                78 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 116 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        117 => /* 'u' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 104;
                            continue;
                        }
                        118 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                79 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 116 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        117 => /* 'u' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 105;
                            continue;
                        }
                        118 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                80 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 98 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        99 => /* 'c' */ {
                            ___current_match = Some((36, ___index + 1));
                            ___current_state = 106;
                            continue;
                        }
                        100 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                81 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 110 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        111 => /* 'o' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 107;
                            continue;
                        }
                        112 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                82 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 110 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        111 => /* 'o' */ {
                            ___current_match = Some((38, ___index + 1));
                            ___current_state = 108;
                            continue;
                        }
                        112 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                83 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 109 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        110 => /* 'n' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 109;
                            continue;
                        }
                        111 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                84 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 104 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        105 => /* 'i' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 110;
                            continue;
                        }
                        106 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                85 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 107 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        108 => /* 'l' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 111;
                            continue;
                        }
                        109 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                86 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 98 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        99 => /* 'c' */ {
                            ___current_match = Some((11, ___index + 1));
                            ___current_state = 112;
                            continue;
                        }
                        100 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                87 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                88 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 99 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        100 => /* 'd' */ {
                            ___current_match = Some((13, ___index + 1));
                            ___current_state = 113;
                            continue;
                        }
                        101 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                89 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 114 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        115 => /* 's' */ {
                            ___current_match = Some((14, ___index + 1));
                            ___current_state = 114;
                            continue;
                        }
                        116 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                90 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 113 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        114 => /* 'r' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 115;
                            continue;
                        }
                        115 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                91 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                92 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                93 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 116 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        117 => /* 'u' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 116;
                            continue;
                        }
                        118 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                94 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 99 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        100 => /* 'd' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 117;
                            continue;
                        }
                        101 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                95 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                96 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 102 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        103 => /* 'g' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 118;
                            continue;
                        }
                        104 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                97 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 114 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        115 => /* 's' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 119;
                            continue;
                        }
                        116 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                98 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 120;
                            continue;
                        }
                        102 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                99 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 => /* 'a' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 121;
                            continue;
                        }
                        98 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                100 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 => /* 'a' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 122;
                            continue;
                        }
                        98 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                101 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 109 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        110 => /* 'n' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 123;
                            continue;
                        }
                        111 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                102 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                103 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 110 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        111 => /* 'o' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 124;
                            continue;
                        }
                        112 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                104 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 113 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        114 => /* 'r' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 125;
                            continue;
                        }
                        115 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                105 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 98 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        99 => /* 'c' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 126;
                            continue;
                        }
                        100 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                106 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                107 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 109 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        110 => /* 'n' */ {
                            ___current_match = Some((37, ___index + 1));
                            ___current_state = 127;
                            continue;
                        }
                        111 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                108 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                109 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 102 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        103 => /* 'g' */ {
                            ___current_match = Some((39, ___index + 1));
                            ___current_state = 128;
                            continue;
                        }
                        104 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                110 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 101 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        102 => /* 'f' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 129;
                            continue;
                        }
                        103 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                111 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 130;
                            continue;
                        }
                        102 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                112 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                113 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                114 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                115 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 131;
                            continue;
                        }
                        102 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                116 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 99 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        100 => /* 'd' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 132;
                            continue;
                        }
                        101 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                117 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 133;
                            continue;
                        }
                        102 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                118 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 134;
                            continue;
                        }
                        102 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                119 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 111 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        112 => /* 'p' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 135;
                            continue;
                        }
                        113 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                120 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 99 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        100 => /* 'd' */ {
                            ___current_match = Some((26, ___index + 1));
                            ___current_state = 136;
                            continue;
                        }
                        101 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                121 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 107 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        108 => /* 'l' */ {
                            ___current_match = Some((27, ___index + 1));
                            ___current_state = 137;
                            continue;
                        }
                        109 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                122 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 => /* 'a' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        98 => /* 'b' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 138;
                            continue;
                        }
                        99 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                123 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 115 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        116 => /* 't' */ {
                            ___current_match = Some((31, ___index + 1));
                            ___current_state = 139;
                            continue;
                        }
                        117 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                124 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 98 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        99 => /* 'c' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 140;
                            continue;
                        }
                        100 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                125 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 109 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        110 => /* 'n' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 141;
                            continue;
                        }
                        111 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                126 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 115 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        116 => /* 't' */ {
                            ___current_match = Some((35, ___index + 1));
                            ___current_state = 142;
                            continue;
                        }
                        117 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                127 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                128 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                129 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 120 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        121 => /* 'y' */ {
                            ___current_match = Some((40, ___index + 1));
                            ___current_state = 143;
                            continue;
                        }
                        122 => /* 'z' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                130 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 115 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        116 => /* 't' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 144;
                            continue;
                        }
                        117 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                131 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 114 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        115 => /* 's' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 145;
                            continue;
                        }
                        116 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                132 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((19, ___index + 1));
                            ___current_state = 146;
                            continue;
                        }
                        102 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                133 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 147;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                134 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 113 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        114 => /* 'r' */ {
                            ___current_match = Some((23, ___index + 1));
                            ___current_state = 148;
                            continue;
                        }
                        115 => /* 's' */ {
                            ___current_match = Some((24, ___index + 1));
                            ___current_state = 149;
                            continue;
                        }
                        116 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                135 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 => /* 'a' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 150;
                            continue;
                        }
                        98 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                136 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                137 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                138 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 107 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        108 => /* 'l' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 151;
                            continue;
                        }
                        109 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                139 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                140 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 110 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        111 => /* 'o' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 152;
                            continue;
                        }
                        112 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                141 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 114 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        115 => /* 's' */ {
                            ___current_match = Some((34, ___index + 1));
                            ___current_state = 153;
                            continue;
                        }
                        116 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                142 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                143 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                144 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 154;
                            continue;
                        }
                        102 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                145 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 114 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        115 => /* 's' */ {
                            ___current_match = Some((15, ___index + 1));
                            ___current_state = 155;
                            continue;
                        }
                        116 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                146 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                147 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 98 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        99 => /* 'c' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 156;
                            continue;
                        }
                        100 ... 114 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        115 => /* 's' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 157;
                            continue;
                        }
                        116 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                148 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                149 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                150 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 98 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        99 => /* 'c' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 158;
                            continue;
                        }
                        100 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                151 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((29, ___index + 1));
                            ___current_state = 159;
                            continue;
                        }
                        102 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                152 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 107 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        108 => /* 'l' */ {
                            ___current_match = Some((33, ___index + 1));
                            ___current_state = 160;
                            continue;
                        }
                        109 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                153 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                154 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 161;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                155 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 => /* 'a' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 162;
                            continue;
                        }
                        98 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                156 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 111 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        112 => /* 'p' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 163;
                            continue;
                        }
                        113 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                157 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 120 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        121 => /* 'y' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 164;
                            continue;
                        }
                        122 => /* 'z' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                158 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 100 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        101 => /* 'e' */ {
                            ___current_match = Some((25, ___index + 1));
                            ___current_state = 165;
                            continue;
                        }
                        102 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                159 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                160 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                161 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((10, ___index + 1));
                            ___current_state = 166;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                162 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 107 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        108 => /* 'l' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 167;
                            continue;
                        }
                        109 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                163 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 110 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        111 => /* 'o' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 168;
                            continue;
                        }
                        112 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                164 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 109 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        110 => /* 'n' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 169;
                            continue;
                        }
                        111 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                165 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                166 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                167 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 107 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        108 => /* 'l' */ {
                            ___current_match = Some((16, ___index + 1));
                            ___current_state = 170;
                            continue;
                        }
                        109 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                168 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 118 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        119 => /* 'w' */ {
                            ___current_match = Some((20, ___index + 1));
                            ___current_state = 171;
                            continue;
                        }
                        120 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                169 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 98 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        99 => /* 'c' */ {
                            ___current_match = Some((21, ___index + 1));
                            ___current_state = 172;
                            continue;
                        }
                        100 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                170 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                171 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                172 => {
                    let (___index, ___ch) = match ___chars.next() { Some(p) => p, None => return ___current_match };
                    match ___ch as u32 {
                        48 ... 57 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        65 ... 90 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        95 => /* '_' */ {
                            ___current_match = Some((44, ___index + 1));
                            ___current_state = 33;
                            continue;
                        }
                        97 ... 122 => {
                            ___current_match = Some((44, ___index + ___ch.len_utf8()));
                            ___current_state = 33;
                            continue;
                        }
                        _ => {
                            return ___current_match;
                        }
                    }
                }
                _ => { panic!("invalid state {}", ___current_state); }
            }
        }
    }

    impl<'input> ___Matcher<'input> {
        pub fn new(s: &'input str) -> ___Matcher<'input> {
            ___Matcher { text: s, consumed: 0 }
        }
    }

    impl<'input> Iterator for ___Matcher<'input> {
        type Item = Result<(usize, (usize, &'input str), usize), ___lalrpop_util::ParseError<usize,(usize, &'input str),()>>;

        fn next(&mut self) -> Option<Self::Item> {
            let ___text = self.text.trim_left();
            let ___whitespace = self.text.len() - ___text.len();
            let ___start_offset = self.consumed + ___whitespace;
            if ___text.is_empty() {
                self.text = ___text;
                self.consumed = ___start_offset;
                None
            } else {
                match ___tokenize(___text) {
                    Some((___index, ___length)) => {
                        let ___result = &___text[..___length];
                        let ___remaining = &___text[___length..];
                        let ___end_offset = ___start_offset + ___length;
                        self.text = ___remaining;
                        self.consumed = ___end_offset;
                        Some(Ok((___start_offset, (___index, ___result), ___end_offset)))
                    }
                    None => {
                        Some(Err(___lalrpop_util::ParseError::InvalidToken { location: ___start_offset }))
                    }
                }
            }
        }
    }
}

#[allow(unused_variables)]
pub fn ___action0<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, TranslationUnit, usize),
) -> TranslationUnit
{
    (___0)
}

#[allow(unused_variables)]
pub fn ___action1<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, s, _): (usize, &'input str, usize),
) -> String
{
    String::from(s)
}

#[allow(unused_variables)]
pub fn ___action2<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, s, _): (usize, &'input str, usize),
) -> String
{
    String::from(s)
}

#[allow(unused_variables)]
pub fn ___action3<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, p, _): (usize, Vec<PreambleStmt>, usize),
    (_, ns, _): (usize, ::std::vec::Vec<Vec<(Namespace, TopLevelDecl)>>, usize),
) -> TranslationUnit
{
    {
        let mut decls = Vec::new();
        for mut d in ns {
            decls.append(&mut d)
        }
        TranslationUnit { preamble: p, declarations: decls }
    }
}

#[allow(unused_variables)]
pub fn ___action4<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, ::std::vec::Vec<(PreambleStmt, &'input str)>, usize),
) -> Vec<PreambleStmt>
{
    {
        let mut v = Vec::new();
        for (p, _) in ___0 {
            v.push(p);
        }
        v
    }
}

#[allow(unused_variables)]
pub fn ___action5<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, PreambleStmt, usize),
) -> PreambleStmt
{
    (___0)
}

#[allow(unused_variables)]
pub fn ___action6<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, PreambleStmt, usize),
) -> PreambleStmt
{
    (___0)
}

#[allow(unused_variables)]
pub fn ___action7<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, PreambleStmt, usize),
) -> PreambleStmt
{
    (___0)
}

#[allow(unused_variables)]
pub fn ___action8<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, file, _): (usize, String, usize),
) -> PreambleStmt
{
    PreambleStmt::CxxInclude(file)
}

#[allow(unused_variables)]
pub fn ___action9<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, id, _): (usize, String, usize),
) -> PreambleStmt
{
    PreambleStmt::Include(IncludeType::Protocol, id) /* resolveIncludePath etc. */
}

#[allow(unused_variables)]
pub fn ___action10<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, id, _): (usize, String, usize),
) -> PreambleStmt
{
    PreambleStmt::Include(IncludeType::Header, id)
}

#[allow(unused_variables)]
pub fn ___action11<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, t, _): (usize, TypeSpec, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, h, _): (usize, String, usize),
) -> PreambleStmt
{
    PreambleStmt::Using { cxx_type: t, header: h, kind: None }
}

#[allow(unused_variables)]
pub fn ___action12<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, k, _): (usize, CxxTypeKind, usize),
    (_, t, _): (usize, TypeSpec, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, h, _): (usize, String, usize),
) -> PreambleStmt
{
    PreambleStmt::Using { cxx_type: t, header: h, kind: Some(k) }
}

#[allow(unused_variables)]
pub fn ___action13<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> CxxTypeKind
{
    CxxTypeKind::Class
}

#[allow(unused_variables)]
pub fn ___action14<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> CxxTypeKind
{
    CxxTypeKind::Struct
}

#[allow(unused_variables)]
pub fn ___action15<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, name, _): (usize, String, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, many_things, _): (usize, ::std::vec::Vec<Vec<(Namespace, TopLevelDecl)>>, usize),
    (_, _, _): (usize, &'input str, usize),
) -> Vec<(Namespace, TopLevelDecl)>
{
    {
        let mut things = Vec::new();
        for old_things in many_things {
            for (mut ns, node) in old_things {
                ns.add_outer_namespace(&name);
                things.push((ns, node))
            }
        }
        things
    }
}

#[allow(unused_variables)]
pub fn ___action16<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, s, _): (usize, (Namespace, Vec<StructField>), usize),
) -> Vec<(Namespace, TopLevelDecl)>
{
    vec![(s.0, TopLevelDecl::Struct(s.1))]
}

#[allow(unused_variables)]
pub fn ___action17<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, u, _): (usize, (Namespace, Vec<TypeSpec>), usize),
) -> Vec<(Namespace, TopLevelDecl)>
{
    vec![(u.0, TopLevelDecl::Union(u.1))]
}

#[allow(unused_variables)]
pub fn ___action18<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, p, _): (usize, (Namespace, Protocol), usize),
) -> Vec<(Namespace, TopLevelDecl)>
{
    vec![(p.0, TopLevelDecl::Protocol(p.1))]
}

#[allow(unused_variables)]
pub fn ___action19<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, name, _): (usize, String, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, raw_fields, _): (usize, ::std::vec::Vec<(StructField, &'input str)>, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, _, _): (usize, &'input str, usize),
) -> (Namespace, Vec<StructField>)
{
    {
        let mut fields = Vec::new();
        for (f, _) in raw_fields {
            fields.push(f);
        }
        (Namespace::new(name), fields)
    }
}

#[allow(unused_variables)]
pub fn ___action20<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, t, _): (usize, TypeSpec, usize),
    (_, field_name, _): (usize, String, usize),
) -> StructField
{
    StructField::new(t, field_name)
}

#[allow(unused_variables)]
pub fn ___action21<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, name, _): (usize, String, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, raw_components, _): (usize, ::std::vec::Vec<(TypeSpec, &'input str)>, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, _, _): (usize, &'input str, usize),
) -> (Namespace, Vec<TypeSpec>)
{
    {
        let mut components = Vec::new();
        for (c, _) in raw_components {
            components.push(c);
        }
        (Namespace::new(name), components)
    }
}

#[allow(unused_variables)]
pub fn ___action22<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, q, _): (usize, ::std::option::Option<(Nesting, SendSemantics)>, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, name, _): (usize, String, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, managers, _): (usize, Vec<String>, usize),
    (_, manages, _): (usize, ::std::option::Option<String>, usize),
    (_, decls, _): (usize, ::std::vec::Vec<MessageDecl>, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, _, _): (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    {
        // XXX If we're currently parsing a header, produce an error.
        let (nesting, send_semantics) = q.unwrap_or((Nesting::None, SendSemantics::Async));
        (Namespace::new(name), Protocol::new(send_semantics, nesting, managers, manages, decls))
    }
}

#[allow(unused_variables)]
pub fn ___action23<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, l, _): (usize, Vec<String>, usize),
    (_, _, _): (usize, &'input str, usize),
) -> Vec<String>
{
    l
}

#[allow(unused_variables)]
pub fn ___action24<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___lookbehind: &usize,
    ___lookahead: &usize,
) -> Vec<String>
{
    Vec::new()
}

#[allow(unused_variables)]
pub fn ___action25<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, name, _): (usize, String, usize),
) -> Vec<String>
{
    vec![name]
}

#[allow(unused_variables)]
pub fn ___action26<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, l, _): (usize, Vec<String>, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, name, _): (usize, String, usize),
) -> Vec<String>
{
    {
        let mut l = l;
        l.push(name);
        l
    }
}

#[allow(unused_variables)]
pub fn ___action27<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, name, _): (usize, String, usize),
    (_, _, _): (usize, &'input str, usize),
) -> String
{
    name
}

#[allow(unused_variables)]
pub fn ___action28<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, (), usize),
    (_, _, _): (usize, &'input str, usize),
    (_, m, _): (usize, MessageDecl, usize),
    (_, _, _): (usize, &'input str, usize),
) -> MessageDecl
{
    m
}

#[allow(unused_variables)]
pub fn ___action29<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, m, _): (usize, MessageDecl, usize),
    (_, _, _): (usize, &'input str, usize),
) -> MessageDecl
{
    m
}

#[allow(unused_variables)]
pub fn ___action30<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> ()
{
    parser_state.direction.set(Some(Direction::In))
}

#[allow(unused_variables)]
pub fn ___action31<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> ()
{
    parser_state.direction.set(Some(Direction::Out))
}

#[allow(unused_variables)]
pub fn ___action32<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> ()
{
    parser_state.direction.set(Some(Direction::InOut))
}

#[allow(unused_variables)]
pub fn ___action33<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, qual, _): (usize, (Nesting, Priority, SendSemantics), usize),
    (_, msg, _): (usize, MessageDecl, usize),
) -> MessageDecl
{
    {
        let mut msg = msg;
        msg.nesting = qual.0;
        msg.prio = qual.1;
        msg.send_semantics = qual.2;

        // XXX Why isn't direction set in MessageBody? Then it might
        // not need to be an Option.
        if parser_state.direction.get().is_none() {
            // XXX Surely there's a better way to do this.
            panic!("Missing message direction.");
        }
        msg.direction = parser_state.direction.get().clone();

        msg
    }
}

#[allow(unused_variables)]
pub fn ___action34<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, name, _): (usize, String, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, in_params, _): (usize, Vec<Param>, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, out_params, _): (usize, Vec<Param>, usize),
    (_, modifiers, _): (usize, ::std::vec::Vec<MessageModifier>, usize),
) -> MessageDecl
{
    {
        let mut decl = MessageDecl::new(name);
        decl.add_in_params(in_params);
        decl.add_out_params(out_params);
        decl.add_modifiers(modifiers);
        decl
    }
}

#[allow(unused_variables)]
pub fn ___action35<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, id, _): (usize, String, usize),
) -> String
{
    id
}

#[allow(unused_variables)]
pub fn ___action36<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> String
{
    String::from("__delete__")
}

#[allow(unused_variables)]
pub fn ___action37<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, l, _): (usize, Vec<Param>, usize),
    (_, _, _): (usize, &'input str, usize),
) -> Vec<Param>
{
    l
}

#[allow(unused_variables)]
pub fn ___action38<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___lookbehind: &usize,
    ___lookahead: &usize,
) -> Vec<Param>
{
    Vec::new()
}

#[allow(unused_variables)]
pub fn ___action39<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> MessageModifier
{
    MessageModifier::Verify
}

#[allow(unused_variables)]
pub fn ___action40<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> MessageModifier
{
    MessageModifier::Compress(Compress::Enabled)
}

#[allow(unused_variables)]
pub fn ___action41<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> MessageModifier
{
    MessageModifier::Compress(Compress::All)
}

#[allow(unused_variables)]
pub fn ___action42<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> Nesting
{
    Nesting::None
}

#[allow(unused_variables)]
pub fn ___action43<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> Nesting
{
    Nesting::InsideSync
}

#[allow(unused_variables)]
pub fn ___action44<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> Nesting
{
    Nesting::InsideCpow
}

#[allow(unused_variables)]
pub fn ___action45<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> Priority
{
    Priority::Normal
}

#[allow(unused_variables)]
pub fn ___action46<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> Priority
{
    Priority::High
}

#[allow(unused_variables)]
pub fn ___action47<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, n, _): (usize, Nesting, usize),
    (_, _, _): (usize, &'input str, usize),
) -> (Option<Nesting>, Option<Priority>)
{
    (Some(n), None)
}

#[allow(unused_variables)]
pub fn ___action48<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, p, _): (usize, Priority, usize),
    (_, _, _): (usize, &'input str, usize),
) -> (Option<Nesting>, Option<Priority>)
{
    (None, Some(p))
}

#[allow(unused_variables)]
pub fn ___action49<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, q, _): (usize, (Option<Nesting>, Option<Priority>), usize),
    (_, l, _): (usize, (Option<Nesting>, Option<Priority>), usize),
) -> (Option<Nesting>, Option<Priority>)
{
    (l.0.or(q.0), l.1.or(q.1))
}

#[allow(unused_variables)]
pub fn ___action50<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___lookbehind: &usize,
    ___lookahead: &usize,
) -> (Option<Nesting>, Option<Priority>)
{
    (None, None)
}

#[allow(unused_variables)]
pub fn ___action51<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, l, _): (usize, (Option<Nesting>, Option<Priority>), usize),
    (_, _, _): (usize, &'input str, usize),
) -> (Nesting, Priority, SendSemantics)
{
    (l.0.unwrap_or(Nesting::None),
         l.1.unwrap_or(Priority::Normal),
         SendSemantics::Async)
}

#[allow(unused_variables)]
pub fn ___action52<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, l, _): (usize, (Option<Nesting>, Option<Priority>), usize),
    (_, _, _): (usize, &'input str, usize),
) -> (Nesting, Priority, SendSemantics)
{
    (l.0.unwrap_or(Nesting::None),
         l.1.unwrap_or(Priority::Normal),
         SendSemantics::Sync)
}

#[allow(unused_variables)]
pub fn ___action53<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> (Nesting, Priority, SendSemantics)
{
    (Nesting::None, Priority::Normal, SendSemantics::Intr)
}

#[allow(unused_variables)]
pub fn ___action54<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> (Nesting, SendSemantics)
{
    (Nesting::None, SendSemantics::Async)
}

#[allow(unused_variables)]
pub fn ___action55<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> (Nesting, SendSemantics)
{
    (Nesting::None, SendSemantics::Sync)
}

#[allow(unused_variables)]
pub fn ___action56<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, n, _): (usize, Nesting, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, _, _): (usize, &'input str, usize),
) -> (Nesting, SendSemantics)
{
    (n, SendSemantics::Async)
}

#[allow(unused_variables)]
pub fn ___action57<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, _, _): (usize, &'input str, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, n, _): (usize, Nesting, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, _, _): (usize, &'input str, usize),
) -> (Nesting, SendSemantics)
{
    (n, SendSemantics::Async)
}

#[allow(unused_variables)]
pub fn ___action58<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> (Nesting, SendSemantics)
{
    (Nesting::None, SendSemantics::Intr)
}

#[allow(unused_variables)]
pub fn ___action59<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, l, _): (usize, Vec<Param>, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, p, _): (usize, Param, usize),
) -> Vec<Param>
{
    {
        let mut l = l;
        l.push(p);
        l
    }
}

#[allow(unused_variables)]
pub fn ___action60<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, p, _): (usize, Param, usize),
) -> Vec<Param>
{
    vec![p]
}

#[allow(unused_variables)]
pub fn ___action61<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___lookbehind: &usize,
    ___lookahead: &usize,
) -> Vec<Param>
{
    Vec::new()
}

#[allow(unused_variables)]
pub fn ___action62<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, t, _): (usize, TypeSpec, usize),
    (_, name, _): (usize, String, usize),
) -> Param
{
    Param::new(t, name)
}

#[allow(unused_variables)]
pub fn ___action63<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, is_nullable, _): (usize, ::std::option::Option<&'input str>, usize),
    (_, t, _): (usize, TypeSpec, usize),
) -> TypeSpec
{
    t.set_nullable(is_nullable.is_some())
}

#[allow(unused_variables)]
pub fn ___action64<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, id, _): (usize, String, usize),
    (_, is_array, _): (usize, ::std::option::Option<(&'input str, &'input str)>, usize),
) -> TypeSpec
{
    {
        TypeSpec::new(QualifiedId::new(id)).set_array(is_array.is_some())
    }
}

#[allow(unused_variables)]
pub fn ___action65<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, id, _): (usize, QualifiedId, usize),
) -> TypeSpec
{
    TypeSpec::new(id)
}

#[allow(unused_variables)]
pub fn ___action66<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, id, _): (usize, String, usize),
) -> TypeSpec
{
    TypeSpec::new(QualifiedId::new(id))
}

#[allow(unused_variables)]
pub fn ___action67<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, qual_id, _): (usize, QualifiedId, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, id, _): (usize, String, usize),
) -> QualifiedId
{
    qual_id.qualify(id)
}

#[allow(unused_variables)]
pub fn ___action68<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, id1, _): (usize, String, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, id2, _): (usize, String, usize),
) -> QualifiedId
{
    QualifiedId::new(id1).qualify(id2)
}

#[allow(unused_variables)]
pub fn ___action69<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, String, usize),
) -> String
{
    (___0)
}

#[allow(unused_variables)]
pub fn ___action70<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, String, usize),
) -> String
{
    (___0)
}

#[allow(unused_variables)]
pub fn ___action71<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, t_name, _): (usize, String, usize),
    (_, _, _): (usize, &'input str, usize),
    (_, arg, _): (usize, String, usize),
    (_, _, _): (usize, &'input str, usize),
) -> String
{
    t_name + "<" + &arg + ">"
}

#[allow(unused_variables)]
pub fn ___action72<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, (&'input str, &'input str), usize),
) -> ::std::option::Option<(&'input str, &'input str)>
{
    Some(___0)
}

#[allow(unused_variables)]
pub fn ___action73<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___lookbehind: &usize,
    ___lookahead: &usize,
) -> ::std::option::Option<(&'input str, &'input str)>
{
    None
}

#[allow(unused_variables)]
pub fn ___action74<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
    (_, ___1, _): (usize, &'input str, usize),
) -> (&'input str, &'input str)
{
    (___0, ___1)
}

#[allow(unused_variables)]
pub fn ___action75<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, &'input str, usize),
) -> ::std::option::Option<&'input str>
{
    Some(___0)
}

#[allow(unused_variables)]
pub fn ___action76<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___lookbehind: &usize,
    ___lookahead: &usize,
) -> ::std::option::Option<&'input str>
{
    None
}

#[allow(unused_variables)]
pub fn ___action77<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___lookbehind: &usize,
    ___lookahead: &usize,
) -> ::std::vec::Vec<MessageModifier>
{
    vec![]
}

#[allow(unused_variables)]
pub fn ___action78<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, v, _): (usize, ::std::vec::Vec<MessageModifier>, usize),
) -> ::std::vec::Vec<MessageModifier>
{
    v
}

#[allow(unused_variables)]
pub fn ___action79<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___lookbehind: &usize,
    ___lookahead: &usize,
) -> ::std::vec::Vec<MessageDecl>
{
    vec![]
}

#[allow(unused_variables)]
pub fn ___action80<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, v, _): (usize, ::std::vec::Vec<MessageDecl>, usize),
) -> ::std::vec::Vec<MessageDecl>
{
    v
}

#[allow(unused_variables)]
pub fn ___action81<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, String, usize),
) -> ::std::option::Option<String>
{
    Some(___0)
}

#[allow(unused_variables)]
pub fn ___action82<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___lookbehind: &usize,
    ___lookahead: &usize,
) -> ::std::option::Option<String>
{
    None
}

#[allow(unused_variables)]
pub fn ___action83<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, (Nesting, SendSemantics), usize),
) -> ::std::option::Option<(Nesting, SendSemantics)>
{
    Some(___0)
}

#[allow(unused_variables)]
pub fn ___action84<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___lookbehind: &usize,
    ___lookahead: &usize,
) -> ::std::option::Option<(Nesting, SendSemantics)>
{
    None
}

#[allow(unused_variables)]
pub fn ___action85<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, (TypeSpec, &'input str), usize),
) -> ::std::vec::Vec<(TypeSpec, &'input str)>
{
    vec![___0]
}

#[allow(unused_variables)]
pub fn ___action86<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, v, _): (usize, ::std::vec::Vec<(TypeSpec, &'input str)>, usize),
    (_, e, _): (usize, (TypeSpec, &'input str), usize),
) -> ::std::vec::Vec<(TypeSpec, &'input str)>
{
    { let mut v = v; v.push(e); v }
}

#[allow(unused_variables)]
pub fn ___action87<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, TypeSpec, usize),
    (_, ___1, _): (usize, &'input str, usize),
) -> (TypeSpec, &'input str)
{
    (___0, ___1)
}

#[allow(unused_variables)]
pub fn ___action88<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___lookbehind: &usize,
    ___lookahead: &usize,
) -> ::std::vec::Vec<(StructField, &'input str)>
{
    vec![]
}

#[allow(unused_variables)]
pub fn ___action89<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, v, _): (usize, ::std::vec::Vec<(StructField, &'input str)>, usize),
) -> ::std::vec::Vec<(StructField, &'input str)>
{
    v
}

#[allow(unused_variables)]
pub fn ___action90<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, StructField, usize),
    (_, ___1, _): (usize, &'input str, usize),
) -> (StructField, &'input str)
{
    (___0, ___1)
}

#[allow(unused_variables)]
pub fn ___action91<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___lookbehind: &usize,
    ___lookahead: &usize,
) -> ::std::vec::Vec<(PreambleStmt, &'input str)>
{
    vec![]
}

#[allow(unused_variables)]
pub fn ___action92<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, v, _): (usize, ::std::vec::Vec<(PreambleStmt, &'input str)>, usize),
) -> ::std::vec::Vec<(PreambleStmt, &'input str)>
{
    v
}

#[allow(unused_variables)]
pub fn ___action93<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, PreambleStmt, usize),
    (_, ___1, _): (usize, &'input str, usize),
) -> (PreambleStmt, &'input str)
{
    (___0, ___1)
}

#[allow(unused_variables)]
pub fn ___action94<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, Vec<(Namespace, TopLevelDecl)>, usize),
) -> ::std::vec::Vec<Vec<(Namespace, TopLevelDecl)>>
{
    vec![___0]
}

#[allow(unused_variables)]
pub fn ___action95<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, v, _): (usize, ::std::vec::Vec<Vec<(Namespace, TopLevelDecl)>>, usize),
    (_, e, _): (usize, Vec<(Namespace, TopLevelDecl)>, usize),
) -> ::std::vec::Vec<Vec<(Namespace, TopLevelDecl)>>
{
    { let mut v = v; v.push(e); v }
}

#[allow(unused_variables)]
pub fn ___action96<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, (PreambleStmt, &'input str), usize),
) -> ::std::vec::Vec<(PreambleStmt, &'input str)>
{
    vec![___0]
}

#[allow(unused_variables)]
pub fn ___action97<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, v, _): (usize, ::std::vec::Vec<(PreambleStmt, &'input str)>, usize),
    (_, e, _): (usize, (PreambleStmt, &'input str), usize),
) -> ::std::vec::Vec<(PreambleStmt, &'input str)>
{
    { let mut v = v; v.push(e); v }
}

#[allow(unused_variables)]
pub fn ___action98<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, (StructField, &'input str), usize),
) -> ::std::vec::Vec<(StructField, &'input str)>
{
    vec![___0]
}

#[allow(unused_variables)]
pub fn ___action99<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, v, _): (usize, ::std::vec::Vec<(StructField, &'input str)>, usize),
    (_, e, _): (usize, (StructField, &'input str), usize),
) -> ::std::vec::Vec<(StructField, &'input str)>
{
    { let mut v = v; v.push(e); v }
}

#[allow(unused_variables)]
pub fn ___action100<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, MessageDecl, usize),
) -> ::std::vec::Vec<MessageDecl>
{
    vec![___0]
}

#[allow(unused_variables)]
pub fn ___action101<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, v, _): (usize, ::std::vec::Vec<MessageDecl>, usize),
    (_, e, _): (usize, MessageDecl, usize),
) -> ::std::vec::Vec<MessageDecl>
{
    { let mut v = v; v.push(e); v }
}

#[allow(unused_variables)]
pub fn ___action102<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, ___0, _): (usize, MessageModifier, usize),
) -> ::std::vec::Vec<MessageModifier>
{
    vec![___0]
}

#[allow(unused_variables)]
pub fn ___action103<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    (_, v, _): (usize, ::std::vec::Vec<MessageModifier>, usize),
    (_, e, _): (usize, MessageModifier, usize),
) -> ::std::vec::Vec<MessageModifier>
{
    { let mut v = v; v.push(e); v }
}

#[allow(unused_variables)]
pub fn ___action104<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, &'input str, usize),
    ___1: (usize, TypeSpec, usize),
) -> TypeSpec
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___0.2.clone();
    let ___temp0 = ___action75(
        parser_state,
        input,
        ___0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action63(
        parser_state,
        input,
        ___temp0,
        ___1,
    )
}

#[allow(unused_variables)]
pub fn ___action105<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, TypeSpec, usize),
) -> TypeSpec
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___0.0.clone();
    let ___temp0 = ___action76(
        parser_state,
        input,
        &___start0,
        &___end0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action63(
        parser_state,
        input,
        ___temp0,
        ___0,
    )
}

#[allow(unused_variables)]
pub fn ___action106<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, &'input str, usize),
    ___1: (usize, &'input str, usize),
) -> ::std::option::Option<(&'input str, &'input str)>
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___1.2.clone();
    let ___temp0 = ___action74(
        parser_state,
        input,
        ___0,
        ___1,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action72(
        parser_state,
        input,
        ___temp0,
    )
}

#[allow(unused_variables)]
pub fn ___action107<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, String, usize),
    ___1: (usize, &'input str, usize),
    ___2: (usize, &'input str, usize),
) -> TypeSpec
{
    let ___start0 = ___1.0.clone();
    let ___end0 = ___2.2.clone();
    let ___temp0 = ___action106(
        parser_state,
        input,
        ___1,
        ___2,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action64(
        parser_state,
        input,
        ___0,
        ___temp0,
    )
}

#[allow(unused_variables)]
pub fn ___action108<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, String, usize),
) -> TypeSpec
{
    let ___start0 = ___0.2.clone();
    let ___end0 = ___0.2.clone();
    let ___temp0 = ___action73(
        parser_state,
        input,
        &___start0,
        &___end0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action64(
        parser_state,
        input,
        ___0,
        ___temp0,
    )
}

#[allow(unused_variables)]
pub fn ___action109<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, PreambleStmt, usize),
    ___1: (usize, &'input str, usize),
) -> ::std::vec::Vec<(PreambleStmt, &'input str)>
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___1.2.clone();
    let ___temp0 = ___action93(
        parser_state,
        input,
        ___0,
        ___1,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action96(
        parser_state,
        input,
        ___temp0,
    )
}

#[allow(unused_variables)]
pub fn ___action110<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, ::std::vec::Vec<(PreambleStmt, &'input str)>, usize),
    ___1: (usize, PreambleStmt, usize),
    ___2: (usize, &'input str, usize),
) -> ::std::vec::Vec<(PreambleStmt, &'input str)>
{
    let ___start0 = ___1.0.clone();
    let ___end0 = ___2.2.clone();
    let ___temp0 = ___action93(
        parser_state,
        input,
        ___1,
        ___2,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action97(
        parser_state,
        input,
        ___0,
        ___temp0,
    )
}

#[allow(unused_variables)]
pub fn ___action111<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___lookbehind: &usize,
    ___lookahead: &usize,
) -> Vec<PreambleStmt>
{
    let ___start0 = ___lookbehind.clone();
    let ___end0 = ___lookahead.clone();
    let ___temp0 = ___action91(
        parser_state,
        input,
        &___start0,
        &___end0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action4(
        parser_state,
        input,
        ___temp0,
    )
}

#[allow(unused_variables)]
pub fn ___action112<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, ::std::vec::Vec<(PreambleStmt, &'input str)>, usize),
) -> Vec<PreambleStmt>
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___0.2.clone();
    let ___temp0 = ___action92(
        parser_state,
        input,
        ___0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action4(
        parser_state,
        input,
        ___temp0,
    )
}

#[allow(unused_variables)]
pub fn ___action113<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, StructField, usize),
    ___1: (usize, &'input str, usize),
) -> ::std::vec::Vec<(StructField, &'input str)>
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___1.2.clone();
    let ___temp0 = ___action90(
        parser_state,
        input,
        ___0,
        ___1,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action98(
        parser_state,
        input,
        ___temp0,
    )
}

#[allow(unused_variables)]
pub fn ___action114<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, ::std::vec::Vec<(StructField, &'input str)>, usize),
    ___1: (usize, StructField, usize),
    ___2: (usize, &'input str, usize),
) -> ::std::vec::Vec<(StructField, &'input str)>
{
    let ___start0 = ___1.0.clone();
    let ___end0 = ___2.2.clone();
    let ___temp0 = ___action90(
        parser_state,
        input,
        ___1,
        ___2,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action99(
        parser_state,
        input,
        ___0,
        ___temp0,
    )
}

#[allow(unused_variables)]
pub fn ___action115<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, &'input str, usize),
    ___1: (usize, String, usize),
    ___2: (usize, &'input str, usize),
    ___3: (usize, &'input str, usize),
    ___4: (usize, &'input str, usize),
) -> (Namespace, Vec<StructField>)
{
    let ___start0 = ___2.2.clone();
    let ___end0 = ___3.0.clone();
    let ___temp0 = ___action88(
        parser_state,
        input,
        &___start0,
        &___end0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action19(
        parser_state,
        input,
        ___0,
        ___1,
        ___2,
        ___temp0,
        ___3,
        ___4,
    )
}

#[allow(unused_variables)]
pub fn ___action116<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, &'input str, usize),
    ___1: (usize, String, usize),
    ___2: (usize, &'input str, usize),
    ___3: (usize, ::std::vec::Vec<(StructField, &'input str)>, usize),
    ___4: (usize, &'input str, usize),
    ___5: (usize, &'input str, usize),
) -> (Namespace, Vec<StructField>)
{
    let ___start0 = ___3.0.clone();
    let ___end0 = ___3.2.clone();
    let ___temp0 = ___action89(
        parser_state,
        input,
        ___3,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action19(
        parser_state,
        input,
        ___0,
        ___1,
        ___2,
        ___temp0,
        ___4,
        ___5,
    )
}

#[allow(unused_variables)]
pub fn ___action117<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, TypeSpec, usize),
    ___1: (usize, &'input str, usize),
) -> ::std::vec::Vec<(TypeSpec, &'input str)>
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___1.2.clone();
    let ___temp0 = ___action87(
        parser_state,
        input,
        ___0,
        ___1,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action85(
        parser_state,
        input,
        ___temp0,
    )
}

#[allow(unused_variables)]
pub fn ___action118<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, ::std::vec::Vec<(TypeSpec, &'input str)>, usize),
    ___1: (usize, TypeSpec, usize),
    ___2: (usize, &'input str, usize),
) -> ::std::vec::Vec<(TypeSpec, &'input str)>
{
    let ___start0 = ___1.0.clone();
    let ___end0 = ___2.2.clone();
    let ___temp0 = ___action87(
        parser_state,
        input,
        ___1,
        ___2,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action86(
        parser_state,
        input,
        ___0,
        ___temp0,
    )
}

#[allow(unused_variables)]
pub fn ___action119<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, ::std::option::Option<(Nesting, SendSemantics)>, usize),
    ___1: (usize, &'input str, usize),
    ___2: (usize, String, usize),
    ___3: (usize, &'input str, usize),
    ___4: (usize, Vec<String>, usize),
    ___5: (usize, String, usize),
    ___6: (usize, ::std::vec::Vec<MessageDecl>, usize),
    ___7: (usize, &'input str, usize),
    ___8: (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    let ___start0 = ___5.0.clone();
    let ___end0 = ___5.2.clone();
    let ___temp0 = ___action81(
        parser_state,
        input,
        ___5,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action22(
        parser_state,
        input,
        ___0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___temp0,
        ___6,
        ___7,
        ___8,
    )
}

#[allow(unused_variables)]
pub fn ___action120<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, ::std::option::Option<(Nesting, SendSemantics)>, usize),
    ___1: (usize, &'input str, usize),
    ___2: (usize, String, usize),
    ___3: (usize, &'input str, usize),
    ___4: (usize, Vec<String>, usize),
    ___5: (usize, ::std::vec::Vec<MessageDecl>, usize),
    ___6: (usize, &'input str, usize),
    ___7: (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    let ___start0 = ___4.2.clone();
    let ___end0 = ___5.0.clone();
    let ___temp0 = ___action82(
        parser_state,
        input,
        &___start0,
        &___end0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action22(
        parser_state,
        input,
        ___0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___temp0,
        ___5,
        ___6,
        ___7,
    )
}

#[allow(unused_variables)]
pub fn ___action121<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, ::std::option::Option<(Nesting, SendSemantics)>, usize),
    ___1: (usize, &'input str, usize),
    ___2: (usize, String, usize),
    ___3: (usize, &'input str, usize),
    ___4: (usize, Vec<String>, usize),
    ___5: (usize, String, usize),
    ___6: (usize, &'input str, usize),
    ___7: (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    let ___start0 = ___5.2.clone();
    let ___end0 = ___6.0.clone();
    let ___temp0 = ___action79(
        parser_state,
        input,
        &___start0,
        &___end0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action119(
        parser_state,
        input,
        ___0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___5,
        ___temp0,
        ___6,
        ___7,
    )
}

#[allow(unused_variables)]
pub fn ___action122<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, ::std::option::Option<(Nesting, SendSemantics)>, usize),
    ___1: (usize, &'input str, usize),
    ___2: (usize, String, usize),
    ___3: (usize, &'input str, usize),
    ___4: (usize, Vec<String>, usize),
    ___5: (usize, String, usize),
    ___6: (usize, ::std::vec::Vec<MessageDecl>, usize),
    ___7: (usize, &'input str, usize),
    ___8: (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    let ___start0 = ___6.0.clone();
    let ___end0 = ___6.2.clone();
    let ___temp0 = ___action80(
        parser_state,
        input,
        ___6,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action119(
        parser_state,
        input,
        ___0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___5,
        ___temp0,
        ___7,
        ___8,
    )
}

#[allow(unused_variables)]
pub fn ___action123<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, ::std::option::Option<(Nesting, SendSemantics)>, usize),
    ___1: (usize, &'input str, usize),
    ___2: (usize, String, usize),
    ___3: (usize, &'input str, usize),
    ___4: (usize, Vec<String>, usize),
    ___5: (usize, &'input str, usize),
    ___6: (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    let ___start0 = ___4.2.clone();
    let ___end0 = ___5.0.clone();
    let ___temp0 = ___action79(
        parser_state,
        input,
        &___start0,
        &___end0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action120(
        parser_state,
        input,
        ___0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___temp0,
        ___5,
        ___6,
    )
}

#[allow(unused_variables)]
pub fn ___action124<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, ::std::option::Option<(Nesting, SendSemantics)>, usize),
    ___1: (usize, &'input str, usize),
    ___2: (usize, String, usize),
    ___3: (usize, &'input str, usize),
    ___4: (usize, Vec<String>, usize),
    ___5: (usize, ::std::vec::Vec<MessageDecl>, usize),
    ___6: (usize, &'input str, usize),
    ___7: (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    let ___start0 = ___5.0.clone();
    let ___end0 = ___5.2.clone();
    let ___temp0 = ___action80(
        parser_state,
        input,
        ___5,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action120(
        parser_state,
        input,
        ___0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___temp0,
        ___6,
        ___7,
    )
}

#[allow(unused_variables)]
pub fn ___action125<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, String, usize),
    ___1: (usize, &'input str, usize),
    ___2: (usize, Vec<Param>, usize),
    ___3: (usize, &'input str, usize),
    ___4: (usize, Vec<Param>, usize),
) -> MessageDecl
{
    let ___start0 = ___4.2.clone();
    let ___end0 = ___4.2.clone();
    let ___temp0 = ___action77(
        parser_state,
        input,
        &___start0,
        &___end0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action34(
        parser_state,
        input,
        ___0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___temp0,
    )
}

#[allow(unused_variables)]
pub fn ___action126<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, String, usize),
    ___1: (usize, &'input str, usize),
    ___2: (usize, Vec<Param>, usize),
    ___3: (usize, &'input str, usize),
    ___4: (usize, Vec<Param>, usize),
    ___5: (usize, ::std::vec::Vec<MessageModifier>, usize),
) -> MessageDecl
{
    let ___start0 = ___5.0.clone();
    let ___end0 = ___5.2.clone();
    let ___temp0 = ___action78(
        parser_state,
        input,
        ___5,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action34(
        parser_state,
        input,
        ___0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___temp0,
    )
}

#[allow(unused_variables)]
pub fn ___action127<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, (Nesting, SendSemantics), usize),
    ___1: (usize, &'input str, usize),
    ___2: (usize, String, usize),
    ___3: (usize, &'input str, usize),
    ___4: (usize, Vec<String>, usize),
    ___5: (usize, String, usize),
    ___6: (usize, &'input str, usize),
    ___7: (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___0.2.clone();
    let ___temp0 = ___action83(
        parser_state,
        input,
        ___0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action121(
        parser_state,
        input,
        ___temp0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___5,
        ___6,
        ___7,
    )
}

#[allow(unused_variables)]
pub fn ___action128<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, &'input str, usize),
    ___1: (usize, String, usize),
    ___2: (usize, &'input str, usize),
    ___3: (usize, Vec<String>, usize),
    ___4: (usize, String, usize),
    ___5: (usize, &'input str, usize),
    ___6: (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___0.0.clone();
    let ___temp0 = ___action84(
        parser_state,
        input,
        &___start0,
        &___end0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action121(
        parser_state,
        input,
        ___temp0,
        ___0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___5,
        ___6,
    )
}

#[allow(unused_variables)]
pub fn ___action129<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, (Nesting, SendSemantics), usize),
    ___1: (usize, &'input str, usize),
    ___2: (usize, String, usize),
    ___3: (usize, &'input str, usize),
    ___4: (usize, Vec<String>, usize),
    ___5: (usize, String, usize),
    ___6: (usize, ::std::vec::Vec<MessageDecl>, usize),
    ___7: (usize, &'input str, usize),
    ___8: (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___0.2.clone();
    let ___temp0 = ___action83(
        parser_state,
        input,
        ___0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action122(
        parser_state,
        input,
        ___temp0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___5,
        ___6,
        ___7,
        ___8,
    )
}

#[allow(unused_variables)]
pub fn ___action130<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, &'input str, usize),
    ___1: (usize, String, usize),
    ___2: (usize, &'input str, usize),
    ___3: (usize, Vec<String>, usize),
    ___4: (usize, String, usize),
    ___5: (usize, ::std::vec::Vec<MessageDecl>, usize),
    ___6: (usize, &'input str, usize),
    ___7: (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___0.0.clone();
    let ___temp0 = ___action84(
        parser_state,
        input,
        &___start0,
        &___end0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action122(
        parser_state,
        input,
        ___temp0,
        ___0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___5,
        ___6,
        ___7,
    )
}

#[allow(unused_variables)]
pub fn ___action131<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, (Nesting, SendSemantics), usize),
    ___1: (usize, &'input str, usize),
    ___2: (usize, String, usize),
    ___3: (usize, &'input str, usize),
    ___4: (usize, Vec<String>, usize),
    ___5: (usize, &'input str, usize),
    ___6: (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___0.2.clone();
    let ___temp0 = ___action83(
        parser_state,
        input,
        ___0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action123(
        parser_state,
        input,
        ___temp0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___5,
        ___6,
    )
}

#[allow(unused_variables)]
pub fn ___action132<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, &'input str, usize),
    ___1: (usize, String, usize),
    ___2: (usize, &'input str, usize),
    ___3: (usize, Vec<String>, usize),
    ___4: (usize, &'input str, usize),
    ___5: (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___0.0.clone();
    let ___temp0 = ___action84(
        parser_state,
        input,
        &___start0,
        &___end0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action123(
        parser_state,
        input,
        ___temp0,
        ___0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___5,
    )
}

#[allow(unused_variables)]
pub fn ___action133<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, (Nesting, SendSemantics), usize),
    ___1: (usize, &'input str, usize),
    ___2: (usize, String, usize),
    ___3: (usize, &'input str, usize),
    ___4: (usize, Vec<String>, usize),
    ___5: (usize, ::std::vec::Vec<MessageDecl>, usize),
    ___6: (usize, &'input str, usize),
    ___7: (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___0.2.clone();
    let ___temp0 = ___action83(
        parser_state,
        input,
        ___0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action124(
        parser_state,
        input,
        ___temp0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___5,
        ___6,
        ___7,
    )
}

#[allow(unused_variables)]
pub fn ___action134<
    'input,
>(
    parser_state: &ParserState,
    input: &'input str,
    ___0: (usize, &'input str, usize),
    ___1: (usize, String, usize),
    ___2: (usize, &'input str, usize),
    ___3: (usize, Vec<String>, usize),
    ___4: (usize, ::std::vec::Vec<MessageDecl>, usize),
    ___5: (usize, &'input str, usize),
    ___6: (usize, &'input str, usize),
) -> (Namespace, Protocol)
{
    let ___start0 = ___0.0.clone();
    let ___end0 = ___0.0.clone();
    let ___temp0 = ___action84(
        parser_state,
        input,
        &___start0,
        &___end0,
    );
    let ___temp0 = (___start0, ___temp0, ___end0);
    ___action124(
        parser_state,
        input,
        ___temp0,
        ___0,
        ___1,
        ___2,
        ___3,
        ___4,
        ___5,
        ___6,
    )
}

pub trait ___ToTriple<'input, > {
    type Error;
    fn to_triple(value: Self) -> Result<(usize,(usize, &'input str),usize),Self::Error>;
}

impl<'input, > ___ToTriple<'input, > for (usize, (usize, &'input str), usize) {
    type Error = ();
    fn to_triple(value: Self) -> Result<(usize,(usize, &'input str),usize),()> {
        Ok(value)
    }
}
impl<'input, > ___ToTriple<'input, > for Result<(usize, (usize, &'input str), usize),()> {
    type Error = ();
    fn to_triple(value: Self) -> Result<(usize,(usize, &'input str),usize),()> {
        value
    }
}
